NEURON{POINT_PROCESSExp2Syn_Inh_STDP_noboundRANGEtau1,tau2,e,i,dd,dp,dtau,ptau,thresh,wmax,wmin,D,shift,g,mean,std,learning_rateNONSPECIFIC_CURRENTi}UNITS{(nA)=(nanoamp)(mV)=(millivolt)(uS)=(microsiemens)}PARAMETER{tau1=0.1(ms)<1e-9,1e9>tau2=10(ms)<1e-9,1e9>e=-73(mV)dd=0.001<0,1>dp=0.001dtau=20(ms)ptau=20(ms)thresh=-20(mV)wmax=0.001(uS)wmin=0(uS)shift=0(ms)mean=0(ms)std=0(ms)learning_rate=1}ASSIGNED{v(mV)i(nA)Dtpost(ms)gfactorjitter}STATE{A(uS)B(uS)}INITIAL{LOCALtpA=0B=0D=0tpost=-1e9jitter=normrand(mean,std)net_send(0,1)if(tau1/tau2>.9999){tau1=.9999*tau2}tp=(tau1*tau2)/(tau2-tau1)*log(tau2/tau1)factor=-exp(-tp/tau1)+exp(-tp/tau2)factor=1/factor}BREAKPOINT{SOLVEstateMETHODcnexpg=B-Ai=g*(v-e)}DERIVATIVEstate{A'=-A/tau1B'=-B/tau2}NET_RECEIVE(w(uS),P,tpre(ms),wsyn){INITIAL{P=0tpre=-1e9wsyn=w}if(flag==0){net_send(jitter,5)net_send(jitter+shift,3)}elseif(flag==2){FOR_NETCONS(w1,P1,tpre1,wsyn1){wsyn1=wsyn1+learning_rate*wmax*P1*exp(-(t-tpre1)/ptau)if(wsyn1<wmin){wsyn1=wmin}}D=D*exp((tpost-t)/dtau)+ddtpost=t}elseif(flag==3){P=P*exp((tpre-t)/ptau)-dptpre=twsyn=wsyn+learning_rate*wmax*D*exp((tpost-t)/dtau)}elseif(flag==5){A=A+wsyn*factorB=B+wsyn*factor}else{WATCH(v>thresh)2}}