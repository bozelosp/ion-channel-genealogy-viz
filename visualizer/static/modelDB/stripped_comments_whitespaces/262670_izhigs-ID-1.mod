NEURON{POINT_PROCESSIzhiGSPOINTERvpreGradedRANGEC,k,vr,vt,vpeak,a,b,c,d,Iin,tauAMPA,tauGraded,celltype,alive,cellid,verboseRANGEV,u,gAMPA,gGraded,gbarGraded,I,eAMPA,eGraded,vmidGraded,vslopeGraded,sinfGradedRANGEfactor,eventflag,delta,t0}UNITS{(mV)=(millivolt)(uS)=(microsiemens)(um)=(micrometer)}PARAMETER{C=1k=0.7vr=-60(mV)vt=-40(mV)vpeak=35(mV)a=0.03b=-2c=-50d=100Iin=0Vpre=0gbarGraded=0(uS)tauAMPA=5(ms)tauGraded=4.0(ms)eGraded=-80(mV)vslopeGraded=5.0(mV)vmidGraded=-40.0(mV)celltype=1alive=1cellid=-1verbose=0}ASSIGNED{factoreventflagV(mV)u(mV)vpreGraded(mV)gAMPAgGraded(uS)Ideltat0sinfGraded}INITIAL{V=vru=0.0t0=tgAMPA=0gGraded=0I=0delta=0net_send(0,1)}VERBATIMcharfilename[1000];ENDVERBATIMPROCEDUREuseverbose(){VERBATIM#include<stdio.h>verbose=(float)*getarg(1);strcpy(filename,gargstr(2));ENDVERBATIM}STATE{sGraded}BREAKPOINT{SOLVEstatesMETHODcnexpdelta=t-t0gAMPA=gAMPA-delta*gAMPA/tauAMPAgGraded=gbarGraded*sGradedfactor=((V+80)/60)*((V+80)/60)I=gAMPA*(V-0)+gGraded*(V-eGraded)Vpre=VV=V+delta*(k*(V-vr)*(V-vt)-u-I+Iin)/(C*100)if(Vpre<=c&&V>vpeak){V=c+1}if(celltype<5){u=u+delta*a*(b*(V-vr)-u)}else{if(celltype==5){if(V<d){u=u+delta*a*(0-u)}else{u=u+delta*a*((0.025*(V-d)*(V-d)*(V-d))-u)}}if(celltype==6){if(V>-65){b=0}else{b=15}u=u+delta*a*(b*(V-vr)-u)}if(celltype==7){if(V>-65){b=2}else{b=10}u=u+delta*a*(b*(V-vr)-u)}}t0=tif(verbose>1){VERBATIMFILE*outfile;outfile=fopen(filename,"a");fprintf(outfile,"%8.2fcell=%6.0fdelta=%8.2fgAMPA=%8.2fgGraded=%8.2ffactor=%8.2fI=%8.2fV=%8.2fu=%8.2f(timestep)\n",t,cellid,delta,gAMPA,gGraded,factor,I,V,u);fclose(outfile);ENDVERBATIM}}NET_RECEIVE(wAMPA){INITIAL{wAMPA=wAMPA}if(flag==1){if(celltype<4||celltype==5||celltype==7){WATCH(V>vpeak)2}elseif(celltype==4){WATCH(V>(vpeak-0.1*u))2}elseif(celltype==6){WATCH(V>(vpeak+0.1*u))2}}elseif(flag==2){if(alive){net_event(t)}if(celltype<4||celltype==7){V=cu=u+d}elseif(celltype==4){V=c+0.04*uif((u+d)<670){u=u+d}else{u=670}}elseif(celltype==5){V=c}elseif(celltype==6){V=c-0.1*uu=u+d}gAMPA=0}else{gAMPA=gAMPA+wAMPA}if(verbose>0){eventflag=flagVERBATIMFILE*outfile;outfile=fopen(filename,"a");fprintf(outfile,"t=%8.2fcell=%6.0fflag=%1.0fgAMPA=%8.2fsinfGraded=%8.2fgGraded=%8.2fV=%8.2fu=%8.2f(event)\n",t,cellid,eventflag,gAMPA,sinfGraded,gGraded,V,u);fclose(outfile);ENDVERBATIM}}DERIVATIVEstates{sinfGraded=1/(1+exp((vmidGraded-vpreGraded)/vslopeGraded))sGraded'=(sinfGraded-sGraded)/tauGraded}