NEURON{THREADSAFEPOINT_PROCESSProbGABAAB_EMS_groupRANGEtau_r_GABAA,tau_d_GABAA,tau_r_GABAB,tau_d_GABAB,NsynsRANGEUse,u,Dep,Fac,u0,Rstate,tsyn_fac,uRANGEi,i_GABAA,i_GABAB,g_GABAA,g_GABAB,g,e_GABAA,e_GABAB,GABAB_ratio,gmaxRANGEA_GABAA_step,B_GABAA_step,A_GABAB_step,B_GABAB_stepNONSPECIFIC_CURRENTiPOINTERrngRANGEsynapseID,verboseLevel}PARAMETER{tau_r_GABAA=0.2(ms)tau_d_GABAA=8(ms)tau_r_GABAB=3.5(ms)tau_d_GABAB=260.9(ms)Use=1.0(1)Dep=100(ms)Fac=10(ms)e_GABAA=-80(mV)e_GABAB=-97(mV)gmax=.001(uS)u0=0synapseID=0verboseLevel=0GABAB_ratio=0(1)Nsyns=10}VERBATIM#include<stdlib.h>#include<stdio.h>#include<math.h>doublenrn_random_pick(void*r);void*nrn_random_arg(intargpos);externintifarg(intiarg);externintvector_capacity(void*vv);externvoid*vector_arg(intiarg);ENDVERBATIMASSIGNED{v(mV)i(nA)i_GABAA(nA)i_GABAB(nA)g_GABAA(uS)g_GABAB(uS)A_GABAA_stepB_GABAA_stepA_GABAB_stepB_GABAB_stepg(uS)factor_GABAAfactor_GABABrngRstate(1)tsyn_fac(ms)u(1)space}STATE{A_GABAAB_GABAAA_GABABB_GABAB}INITIAL{LOCALtp_GABAA,tp_GABABRstate=1tsyn_fac=0u=u0A_GABAA=0B_GABAA=0A_GABAB=0B_GABAB=0tp_GABAA=(tau_r_GABAA*tau_d_GABAA)/(tau_d_GABAA-tau_r_GABAA)*log(tau_d_GABAA/tau_r_GABAA)tp_GABAB=(tau_r_GABAB*tau_d_GABAB)/(tau_d_GABAB-tau_r_GABAB)*log(tau_d_GABAB/tau_r_GABAB)factor_GABAA=-exp(-tp_GABAA/tau_r_GABAA)+exp(-tp_GABAA/tau_d_GABAA)factor_GABAA=1/factor_GABAAfactor_GABAB=-exp(-tp_GABAB/tau_r_GABAB)+exp(-tp_GABAB/tau_d_GABAB)factor_GABAB=1/factor_GABABA_GABAA_step=exp(dt*((-1.0)/tau_r_GABAA))B_GABAA_step=exp(dt*((-1.0)/tau_d_GABAA))A_GABAB_step=exp(dt*((-1.0)/tau_r_GABAB))B_GABAB_step=exp(dt*((-1.0)/tau_d_GABAB))}BREAKPOINT{SOLVEstateg_GABAA=gmax*(B_GABAA-A_GABAA)g_GABAB=gmax*(B_GABAB-A_GABAB)g=g_GABAA+g_GABABi_GABAA=g_GABAA*(v-e_GABAA)i_GABAB=g_GABAB*(v-e_GABAB)i=i_GABAA+i_GABAB}PROCEDUREstate(){A_GABAA=A_GABAA*A_GABAA_stepB_GABAA=B_GABAA*B_GABAA_stepA_GABAB=A_GABAB*A_GABAB_stepB_GABAB=B_GABAB*B_GABAB_step}NET_RECEIVE(weight,Psurv,myInd,tsyn(ms),tsyn_fac(ms),u){LOCALresultINITIAL{tsyn=t}VERBATIMvoid**vv=(void**)(&space);double*x;intnx=vector_instance_px(*vv,&x);intmyInd=rand()%((int)Nsyns);_args[2]=myInd;_args[3]=x[myInd];_args[4]=x[myInd+(int)Nsyns];_args[5]=x[myInd+2*((int)Nsyns)];ENDVERBATIMif(!(weight>0)){VERBATIMreturn;ENDVERBATIM}if(Fac>0){u=u*exp(-(t-tsyn_fac)/Fac)}else{u=Use}if(Fac>0){u=u+Use*(1-u)}tsyn_fac=tif(Rstate==0){Psurv=exp(-(t-tsyn)/Dep)result=urand()if(result>Psurv){Rstate=1if(verboseLevel>0){printf("Recovered!%fattime%g}}else{tsyn=tif(verboseLevel>0){printf("Failedtorecover!%fattime%g}}}if(Rstate==1){result=urand()if(result<u){tsyn=tRstate=0A_GABAA=A_GABAA+weight*factor_GABAAB_GABAA=B_GABAA+weight*factor_GABAAA_GABAB=A_GABAB+weight*GABAB_ratio*factor_GABABB_GABAB=B_GABAB+weight*GABAB_ratio*factor_GABABif(verboseLevel>0){printf("Release!%fattime%g}}else{if(verboseLevel>0){printf("Failure!%fattime%g}}}VERBATIMx[myInd]=_args[3];x[myInd+(int)Nsyns]=_args[4];x[myInd+2*((int)Nsyns)]=_args[5];ENDVERBATIM}PROCEDUREsetRNG(){VERBATIM{void**pv=(void**)(&_p_rng);if(ifarg(1)){*pv=nrn_random_arg(1);}else{*pv=(void*)0;}}ENDVERBATIM}FUNCTIONurand(){VERBATIMdoublevalue;if(_p_rng){value=nrn_random_pick(_p_rng);returnvalue;}else{ENDVERBATIMvalue=scop_random(1)VERBATIM}ENDVERBATIMurand=value}FUNCTIONtoggleVerbose(){verboseLevel=1-verboseLevel}PROCEDUREsetVec(){VERBATIMvoid**vv;vv=(void**)(&space);*vv=(void*)0;if(ifarg(1)){*vv=vector_arg(1);Nsyns=vector_capacity(*vv)/3;}ENDVERBATIM}