NEURON{SUFFIXstatsGLOBALINSTALLED,seed,kmeasure,verbose}PARAMETER{INSTALLED=0kmeasure=0verbose=0}ASSIGNED{seed}VERBATIM#include<stdlib.h>#include<math.h>#include<limits.h>#include<float.h>#include<sys/time.h>#include"misc.h"externdoubleBVBASE;externdouble*hoc_pgetarg();Symbol*hoc_get_symbol();char**hoc_pgargstr();externPoint_process*ob2pntproc(Object*);externdoublehoc_call_func(Symbol*,intnarg);externFILE*hoc_obj_file_arg(intnarg);externObject**hoc_objgetarg();externvoidvector_resize();externintvector_instance_px();externvoid*vector_arg();externdouble*vector_vec();externdoublehoc_epsilon;externvoidset_seed();externunsignedint*scrset();externintivoc_list_count(Object*);externObject*ivoc_list_item(Object*,int);externinthoc_is_double_arg(intnarg);externObjectdata*hoc_objectdata;externintopenvec(int,double**);externchar*hoc_object_name(Object*);externintnrn_mlh_gsort();externintcmpdfn();staticvoidhxe(){hoc_execerror("",0);}unsignedintvalseed;typedefstructBVEC{intsize;intbufsize;short*x;Object*o;}bvec;uniondblint{inti[2];doubled;};#defineVRRY50ENDVERBATIMVERBATIMstaticdoubleslope(void*vv){inti,n;double*x,*y;doubletimestep,sigxy,sigx,sigy,sigx2;n=vector_instance_px(vv,&y);if(ifarg(1)){timestep=*getarg(1);}else{printf("Youmustsupplyatimestep\n");return0;}sigxy=sigx=sigy=sigx2=0;x=(double*)malloc(sizeof(double)*n);for(i=0;i<n;i++){x[i]=timestep*i;sigxy+=x[i]*y[i];sigx+=x[i];sigy+=y[i];sigx2+=x[i]*x[i];}free(x);return(n*sigxy-sigx*sigy)/(n*sigx2-sigx*sigx);}ENDVERBATIMVERBATIMstaticdoublevslope(void*vv){inti,n;double*x,*y;doubletimestep,sigxy,sigx,sigy,sigx2;n=vector_instance_px(vv,&y);if(ifarg(1)){if(vector_arg_px(1,&x)!=n){hoc_execerror("Vectorsizedoesn'tmatch.",0);}sigxy=sigx=sigy=sigx2=0;for(i=0;i<n;i++){sigxy+=x[i]*y[i];sigx+=x[i];sigy+=y[i];sigx2+=x[i]*x[i];}}return(n*sigxy-sigx*sigy)/(n*sigx2-sigx*sigx);}ENDVERBATIMVERBATIMdoublegetsqerr(double*x,double*y,doublem,doubleb,intn,double*meansqerr,double*maxsqerr){inti;doubleval;if(!n){return-1.0;}val=0.0;*meansqerr=0.0;*maxsqerr=0.0;for(i=0;i<n;i++){val=y[i]-(m*x[i]+b);val=val*val;if(val>*maxsqerr)*maxsqerr=val;*meansqerr+=val;}*meansqerr=*meansqerr/(double)n;return*meansqerr;}ENDVERBATIMVERBATIMstaticdoublestats(void*vv){inti,n;double*x,*y,*out;doubletimestep,sigxy,sigx,sigy,sigx2,sigy2;doubler,m,b,dmeansqerr,dmaxsqerr;n=vector_instance_px(vv,&y);if(ifarg(1)){timestep=*getarg(1);}else{printf("Youmustsupplyatimestep\n");return0;}sigxy=sigx=sigy=sigx2=sigy2=0;x=(double*)malloc(sizeof(double)*n);for(i=0;i<n;i++){x[i]=timestep*i;sigxy+=x[i]*y[i];sigx+=x[i];sigy+=y[i];sigx2+=x[i]*x[i];sigy2+=y[i]*y[i];}m=(n*sigxy-sigx*sigy)/(n*sigx2-sigx*sigx);b=(sigy*sigx2-sigx*sigxy)/(n*sigx2-sigx*sigx);r=(n*sigxy-sigx*sigy)/(sqrt(n*sigx2-sigx*sigx)*sqrt(n*sigy2-sigy*sigy));getsqerr(x,y,m,b,n,&dmeansqerr,&dmaxsqerr);if(ifarg(2)){out=vector_newsize(vector_arg(2),5);out[0]=m;out[1]=b;out[2]=r;out[3]=dmeansqerr;out[4]=dmaxsqerr;}else{printf("Examined%ddatapoints\n",n);printf("slope=%f\n",m);printf("intercept=%f\n",b);printf("R=%f\n",r);printf("R-squared=%f\n",r*r);printf("MeanSQErr=%f\n",dmeansqerr);printf("MaxSQErr=%f\n",dmaxsqerr);}free(x);return1;}staticdoublepcorrels2(double*x,double*y,intn){inti;doublesigxy,sigx,sigy,sigx2,sigy2,dn;sigxy=sigx=sigy=sigx2,sigy2=0;dn=(double)n;for(i=0;i<n;i++){sigxy+=x[i]*y[i];sigx+=x[i];sigy+=y[i];sigx2+=x[i]*x[i];sigy2+=y[i]*y[i];}sigxy-=(sigx*sigy)/n;sigx2-=(sigx*sigx)/n;sigy2-=(sigy*sigy)/n;if(sigx2<=0)return0;if(sigy2<=0)return0;sigxy=sigxy/sqrt(sigx2*sigy2);returnsigxy;}staticdoublepcorrel(void*vv){inti,n;double*x,*y;n=vector_instance_px(vv,&x);if((i=vector_arg_px(1,&y))!=n){printf("pcorrelsERRA:%d%d\n",n,i);hxe();}returnpcorrels2(x,y,n);}ENDVERBATIMVERBATIMstaticdoubleunnan(void*vv){inti,nx,cnt;doublenewnan,newinf;uniondblintxx;double*x;newnan=newinf=0;nx=vector_instance_px(vv,&x);if(ifarg(1))newinf=newnan=*getarg(1);if(ifarg(2))newinf=*getarg(2);for(i=0,cnt=0;i<nx;i++){xx.d=x[i];if(xx.i[0]==0x0&&xx.i[1]==0xfff80000){x[i]=newnan;cnt++;}if(xx.i[0]==0x0&&xx.i[1]==0x7ff00000){x[i]=newinf;cnt++;}}return(double)cnt;}ENDVERBATIMVERBATIMstaticdoublevstats(void*vv){inti,n;double*x,*y,*out;doublesigxy,sigx,sigy,sigx2,sigy2;doubler,m,b,dmeansqerr,dmaxsqerr;n=vector_instance_px(vv,&y);if(ifarg(1)){if(vector_arg_px(1,&x)!=n){hoc_execerror("Vectorsizedoesn'tmatch.",0);}sigxy=sigx=sigy=sigx2=sigy2=0;for(i=0;i<n;i++){sigxy+=x[i]*y[i];sigx+=x[i];sigy+=y[i];sigx2+=x[i]*x[i];sigy2+=y[i]*y[i];}m=(n*sigxy-sigx*sigy)/(n*sigx2-sigx*sigx);b=(sigy*sigx2-sigx*sigxy)/(n*sigx2-sigx*sigx);r=(n*sigxy-sigx*sigy)/(sqrt(n*sigx2-sigx*sigx)*sqrt(n*sigy2-sigy*sigy));getsqerr(x,y,m,b,n,&dmeansqerr,&dmaxsqerr);if(ifarg(2)){out=vector_newsize(vector_arg(2),5);out[0]=m;out[1]=b;out[2]=r;out[3]=dmeansqerr;out[4]=dmaxsqerr;}else{printf("Examined%ddatapoints\n",n);printf("slope=%f\n",m);printf("intercept=%f\n",b);printf("R=%f\n",r);printf("R-squared=%f\n",r*r);printf("MeanSQErr=%f\n",dmeansqerr);printf("MaxSQErr=%f\n",dmaxsqerr);}return1;}else{printf("Youmustsupplyanxvector\n");return0;}}ENDVERBATIMVERBATIMstaticdoublerandwd(void*vv){inti,ii,jj,nx,ny,flip,flag;double*x,*y;nx=vector_instance_px(vv,&x);flip=(int)*getarg(1);if(ifarg(2)){flag=1;ny=vector_arg_px(2,&y);if(ny!=flip){hoc_execerror("Optvectormustbesizefor#offlips",0);}}else{flag=0;}if(flip>=nx){hoc_execerror("#offlipsexceeds(or==)vectorsize",0);}for(i=0;i<nx;i++){x[i]=BVBASE;}for(i=0,jj=0;i<flip;i++){ii=(int)((nx+1)*drand48());if(x[ii]==BVBASE){x[ii]=1.;if(flag){y[jj]=ii;jj++;}}else{i--;}}returnflip;}ENDVERBATIMVERBATIMstaticdoublehash(void*vv){inti,j,nx,nv[VRRY],num,vfl;uniondblintxx;Object*ob;double*x,*vvo[VRRY],big,y,prod;nx=vector_instance_px(vv,&x);if(ifarg(1)){vfl=0;ob=*hoc_objgetarg(1);num=ivoc_list_count(ob);if(num>VRRY){printf("vecst:hashERR:canonlyhandle%dvecs:%d\n",VRRY,num);hxe();}for(i=0;i<num;i++){nv[i]=list_vector_px(ob,i,&vvo[i]);if(nx!=nv[i]){printf("vecst:hashERR%d%d%d\n",i,nx,nv[i]);hxe();}}}else{vfl=1;num=nx;nx=1;}big=pow(DBL_MAX,1./(double)num);for(i=0;i<nx;i++){for(j=0,prod=1;j<num;j++){if(vfl){xx.d=x[j];}else{xx.d=vvo[j][i];}if(xx.i[0]==0){xx.i[0]=xx.i[1];xx.i[0]<<=4;}if(xx.i[1]==0){xx.i[1]=xx.i[0];xx.i[1]<<=4;}mcell_ran4_init(xx.i[1]);mcell_ran4((unsignedint*)&xx.i[0],&y,1,big);prod*=y;}if(!vfl)x[i]=prod;elsereturnprod;}return(double)nx;}ENDVERBATIMVERBATIMstaticdoublesetrnd(void*vv){intflag,i;unsignedintnx;double*x,y,n;unsignedlongvalue;value=1;nx=vector_instance_px(vv,&x);flag=(int)*getarg(1);if(flag==1){for(i=0;i<nx;i++)x[i]=(double)rand()/RAND_MAX;}elseif(flag==2){for(i=0;i<nx;i++)x[i]=drand48();}elseif(flag==3){unsignedlonga=2147437301,c=453816981,m=~0;value=(unsignedlong)seed;for(i=0;i<nx;i++){value=a*value+c;x[i]=(fabs((double)value/(double)m));}seed=(double)value;}elseif(flag==4){n=ifarg(2)?(*getarg(2)):1.;if(ifarg(3))valseed=(unsignedint)(*getarg(3));mcell_ran4(&valseed,x,nx,n);return(double)valseed;}elseif(flag==5){n=ifarg(2)?(*getarg(2)):1.;if(ifarg(3))valseed=(unsignedint)(*getarg(3));mcell_ran4(&valseed,x,nx,n);for(i=0;i<nx;i++)x[i]=floor(x[i]);return(double)valseed;}return(double)nx;}ENDVERBATIMVERBATIMstaticdoublehamming(void*vv){inti,nx,ny,nz,prflag;double*x,*y,*z,sum;sum=0.;nx=vector_instance_px(vv,&x);ny=vector_arg_px(1,&y);if(ifarg(2)){prflag=1;nz=vector_arg_px(2,&z);}else{prflag=0;}if(nx!=ny||(prflag&&nx!=nz)){hoc_execerror("Vectorsmustbesamesize",0);}for(i=0;i<nx;++i){if(x[i]!=y[i]){sum++;if(prflag){z[i]=1.;}}elseif(prflag){z[i]=0.;}}returnsum;}ENDVERBATIMVERBATIMstaticdoubledistance(void*vv){inti,nx,ny;double*x,*y,sum;sum=0.;nx=vector_instance_px(vv,&x);ny=vector_arg_px(1,&y);if(nx!=ny){printf("Vectorsmustbesamesize%d%d\n",nx,ny);hxe();}for(i=0;i<nx;i++)sum+=(x[i]-y[i])*(x[i]-y[i]);returnsqrt(sum);}ENDVERBATIMVERBATIMstaticdoublendprd(void*vv){inti,nx,ny;double*x,*y,sum,sumx,sumy;nx=vector_instance_px(vv,&x);ny=vector_arg_px(1,&y);if(nx!=ny){printf("Vectorsmustbesamesize%d%d\n",nx,ny);hxe();}for(i=0,sum=0.,sumx=0.,sumy=0.;i<nx;i++){sum+=x[i]*y[i];sumx+=x[i]*x[i];sumy+=y[i]*y[i];}if(ifarg(2)){returnsum/sqrt(sumx)/sqrt(sumy);}else{returnacos(sum/sqrt(sumx)/sqrt(sumy))*180./M_PI;}}ENDVERBATIMVERBATIMstaticdoubleflipbits(void*vv){inti,j,nx,ny,flip,ii;double*x,*y;nx=vector_instance_px(vv,&x);ny=vector_arg_px(1,&y);flip=(int)*getarg(2);if(ny<nx){hoc_execerror("flipbits:Scratchvectormustadequatesize",0);}mcell_ran4(&valseed,y,(unsignedint)ny,(double)nx);for(i=0,j=0;i<flip&&j<ny;j++){ii=(int)y[j];if(x[ii]==BVBASE){x[ii]=1e9;i++;}elseif(x[ii]==1){x[ii]=-1e9;i++;}}j=i;for(i=0;i<nx;i++)if(x[i]==1e9)x[i]=1;elseif(x[i]==-1e9)x[i]=BVBASE;return(double)j;}ENDVERBATIMVERBATIMstaticdoubleflipbalbits(void*vv){inti,nx,ny,flip,ii,next;double*x,*y;nx=vector_instance_px(vv,&x);ny=vector_arg_px(1,&y);flip=(int)*getarg(2);if(nx!=ny){hoc_execerror("Scratchvectormustbesamesize",0);}for(i=0;i<nx;i++){y[i]=x[i];}next=1;for(i=0;i<flip;){ii=(int)((nx+1)*drand48());if(x[ii]==y[ii]&&y[ii]==next){next=x[ii]=((x[ii]==1.)?BVBASE:1.);i++;}}returnflip;}ENDVERBATIMVERBATIMstaticdoublevpr(void*vv){inti,nx,flag;double*x;charc;FILE*f;nx=vector_instance_px(vv,&x);if(ifarg(1)){if(hoc_is_double_arg(1)){flag=(int)*getarg(1);if(flag==0){for(i=0;i<nx;i++)printf("%s%d%s",x[i]>=10?"|":"",(int)x[i],x[i]>=10?"|":"");}elseif(flag==-1){for(i=0;i<nx;i++)printf("%04.2f|",x[i]);}elseif(flag==10){for(i=0;i<nx;i++)if(x[i]>=10)printf("+");elseprintf("%d",(int)x[i]);}elseif(flag==16){for(i=0;i<nx;i++)if(x[i]>=16)printf("+");elseprintf("%x",(int)x[i]);}elseif(flag==64){for(i=0;i<nx;i++){if(x[i]>=64){printf("+");}elseif(x[i]<16){printf("%x",(int)x[i]);}elseif(x[i]<36){printf("%c",(int)x[i]+87);}elseif(x[i]<62){printf("%c",(int)x[i]+29);}elseif(x[i]<63){printf("@");}elseif(x[i]<64){printf("=");}elseprintf("ERROR");}}if(!ifarg(2))printf("\n");elseprintf("");}else{f=hoc_obj_file_arg(1);for(i=0;i<nx;i++){if(x[i]>BVBASE){fprintf(f,"%d",1);}else{fprintf(f,"%d",0);}}fprintf(f,"\n");}}else{for(i=0;i<nx;i++){if(x[i]>BVBASE){printf("%d",1);}else{printf("%d",0);}}printf("\n");}return1.;}ENDVERBATIMVERBATIMstaticdoublebin(void*vv){inti,j,nx,maxsz,lfl;double*x,*y,*ix,invl,min,max,maxf,jj;Object*ob;void*voi[2];min=0;max=1e9;maxf=-1e9;nx=vector_instance_px(vv,&x);ob=*hoc_objgetarg(1);if(strncmp(hoc_object_name(ob),"Vector",6)==0){lfl=0;if((maxsz=openvec(1,&y))==0)hxe();voi[0]=vector_arg(1);}else{lfl=1;maxsz=list_vector_px3(ob,0,&y,&voi[0]);if(maxsz!=(i=list_vector_px3(ob,1,&ix,&voi[1]))){printf("binERRA%d%d\n",maxsz,i);hxe();}}invl=*getarg(2);if(ifarg(4)){min=*getarg(3);max=*getarg(4);}elseif(ifarg(3))max=*getarg(3);for(j=0;j<maxsz;j++)y[j]=0.;for(i=0;i<nx;i++){if(x[i]>=max){y[(j=(int)(jj=(max-min)/invl))]++;}elseif(x[i]<=min){y[(j=0)]++;jj=0.;}else{if(x[i]>maxf)maxf=x[i];j=(int)(jj=(x[i]-min)/invl);if(j>maxsz-1){printf("binERRBOOB:%d>%d\n",j,maxsz-1);hxe();}y[j]++;}if(lfl)ix[j]=jj+min;}maxsz=(max==1e9)?(int)(maxf/invl+1):(int)((max-min)/invl+1);vector_resize((IvocVect*)voi[0],maxsz);if(lfl)vector_resize((IvocVect*)voi[1],maxsz);return(double)maxsz;}ENDVERBATIMPROCEDUREinstall(){if(INSTALLED==1){printf("$Id}else{INSTALLED=1VERBATIMvalseed=1;install_vector_method("slope",slope);install_vector_method("vslope",vslope);install_vector_method("stats",stats);install_vector_method("pcorrel",pcorrel);install_vector_method("vstats",vstats);install_vector_method("randwd",randwd);install_vector_method("hamming",hamming);install_vector_method("flipbits",flipbits);install_vector_method("flipbalbits",flipbalbits);install_vector_method("vpr",vpr);install_vector_method("bin",bin);install_vector_method("setrnd",setrnd);install_vector_method("distance",distance);install_vector_method("ndprd",ndprd);install_vector_method("hash",hash);install_vector_method("unnan",unnan);ENDVERBATIM}}PROCEDUREprhash(x){VERBATIM{uniondblintxx;xx.d=_lx;printf("%08x%08x\n",xx.i[0],xx.i[1]);}ENDVERBATIM}FUNCTIONfac(n){VERBATIM{staticintntop=4;staticdoublea[101]={1.,1.,2.,6.,24.};staticdoublecof[6]={76.18009173,-86.50532033,24.01409822,-1.231739516,0.120858003e-2,-0.536382e-5};intj,n;n=(int)_ln;if(n<0){hoc_execerror("Nonegativenumbers",0);}if(n>100){doublex,tmp,ser;x=_ln;tmp=x+5.5;tmp-=(x+0.5)*log(tmp);ser=1.0;for(j=0;j<=5;j++){x+=1.0;ser+=cof[j]/x;}returnexp(-tmp+log(2.50662827465*ser));}else{while(ntop<n){j=ntop++;a[ntop]=a[j]*ntop;}returna[n];}}ENDVERBATIM}FUNCTIONlogfac(n){VERBATIM{staticintntop=4;staticdoublea[101]={1.,1.,2.,6.,24.};staticdoublecof[6]={76.18009173,-86.50532033,24.01409822,-1.231739516,0.120858003e-2,-0.536382e-5};intj,n;n=(int)_ln;if(n<0){hoc_execerror("Nonegativenumbers",0);}if(n>100){doublex,tmp,ser;x=_ln;tmp=x+5.5;tmp-=(x+0.5)*log(tmp);ser=1.0;for(j=0;j<=5;j++){x+=1.0;ser+=cof[j]/x;}return(-tmp+log(2.50662827465*ser));}else{while(ntop<n){j=ntop++;a[ntop]=a[j]*ntop;}returnlog(a[n]);}}ENDVERBATIM}FUNCTIONgetseed(){VERBATIMseed=(double)valseed;returnseed;ENDVERBATIM}FUNCTIONvseed(){VERBATIM#ifdefWIN32if(ifarg(1))seed=*getarg(1);else{printf("TIMEACCESSNOTPRESENTINWINDOWS\n");hxe();}srand48((unsigned)seed);set_seed(seed);returnseed;#elsestructtimevaltp;structtimezonetzp;if(ifarg(1))seed=*getarg(1);else{gettimeofday(&tp,&tzp);seed=tp.tv_usec;}srand48((unsigned)seed);set_seed(seed);srandom(seed);valseed=(unsignedint)seed;returnseed;#endifENDVERBATIM}FUNCTIONmc4seed(){VERBATIMinti;valseed=(unsignedint)(*getarg(1));for(i=2;ifarg(i);i++){valseed*=(unsignedint)(*getarg(i));}returnvalseed;ENDVERBATIM}FUNCTIONgammln(xx){VERBATIM{doublex,tmp,ser;staticdoublecof[6]={76.18009173,-86.50532033,24.01409822,-1.231739516,0.120858003e-2,-0.536382e-5};intj;x=_lxx-1.0;tmp=x+5.5;tmp-=(x+0.5)*log(tmp);ser=1.0;for(j=0;j<=5;j++){x+=1.0;ser+=cof[j]/x;}return-tmp+log(2.50662827465*ser);}ENDVERBATIM}FUNCTIONbetai(a,b,x){VERBATIM{doublebt;doublegammln(double),betacf(double,double,double);if(_lx<0.0||_lx>1.0){printf("BadxinroutineBETAI\n");hxe();}if(_lx==0.0||_lx==1.0)bt=0.0;elsebt=exp(gammln(_la+_lb)-gammln(_la)-gammln(_lb)+_la*log(_lx)+_lb*log(1.0-_lx));if(_lx<(_la+1.0)/(_la+_lb+2.0))returnbt*betacf(_la,_lb,_lx)/_la;elsereturn1.0-bt*betacf(_lb,_la,1.0-_lx)/_lb;}ENDVERBATIM}VERBATIM#defineITMAX100#defineEPS3.0e-7ENDVERBATIMFUNCTIONbetacf(a,b,x){VERBATIM{doubleqap,qam,qab,em,tem,d;doublebz,bm=1.0,bp,bpp;doubleaz=1.0,am=1.0,ap,app,aold;intm;voidnrerror();qab=_la+_lb;qap=_la+1.0;qam=_la-1.0;bz=1.0-qab*_lx/qap;for(m=1;m<=ITMAX;m++){em=(double)m;tem=em+em;d=em*(_lb-em)*_lx/((qam+tem)*(_la+tem));ap=az+d*am;bp=bz+d*bm;d=-(_la+em)*(qab+em)*_lx/((qap+tem)*(_la+tem));app=ap+d*az;bpp=bp+d*bz;aold=az;am=ap/bpp;bm=bp/bpp;az=app/bpp;bz=1.0;if(fabs(az-aold)<(EPS*fabs(az)))returnaz;}printf("aorbtoobig,orITMAXtoosmallinBETACF");return-1.;}ENDVERBATIM}FUNCTIONsymval(){VERBATIM{Symbol*sym;sym=hoc_get_symbol(*hoc_pgargstr(1));#ifdefined(t)return*(hoc_objectdata[sym->u.oboff]._pval);#elsereturn*(hoc_objectdata[sym->u.oboff].pval);#endif}ENDVERBATIM}