NEURON{THREADSAFEPOINT_PROCESSProbAMPANMDA_EMSRANGEtau_r_AMPA,tau_d_AMPA,tau_r_NMDA,tau_d_NMDARANGEUse,u,Dep,Fac,u0,mg,Rstate,tsyn_fac,uRANGEi,i_AMPA,i_NMDA,g_AMPA,g_NMDA,g,e,NMDA_ratio,gmaxRANGEA_AMPA_step,B_AMPA_step,A_NMDA_step,B_NMDA_stepNONSPECIFIC_CURRENTiPOINTERrngRANGEsynapseID,verboseLevel}PARAMETER{tau_r_AMPA=0.2(ms)tau_d_AMPA=1.7(ms)tau_r_NMDA=0.29(ms)tau_d_NMDA=43(ms)Use=1.0(1)Dep=100(ms)Fac=10(ms)e=0(mV)mg=1(mM)mggategmax=.001(uS)u0=0synapseID=0verboseLevel=0NMDA_ratio=0.71(1)}VERBATIM#include<stdlib.h>#include<stdio.h>#include<math.h>doublenrn_random_pick(void*r);void*nrn_random_arg(intargpos);ENDVERBATIMASSIGNED{v(mV)i(nA)i_AMPA(nA)i_NMDA(nA)g_AMPA(uS)g_NMDA(uS)g(uS)factor_AMPAfactor_NMDAA_AMPA_stepB_AMPA_stepA_NMDA_stepB_NMDA_steprngRstate(1)tsyn_fac(ms)u(1)}STATE{A_AMPAB_AMPAA_NMDAB_NMDA}INITIAL{LOCALtp_AMPA,tp_NMDARstate=1tsyn_fac=0u=u0A_AMPA=0B_AMPA=0A_NMDA=0B_NMDA=0tp_AMPA=(tau_r_AMPA*tau_d_AMPA)/(tau_d_AMPA-tau_r_AMPA)*log(tau_d_AMPA/tau_r_AMPA)tp_NMDA=(tau_r_NMDA*tau_d_NMDA)/(tau_d_NMDA-tau_r_NMDA)*log(tau_d_NMDA/tau_r_NMDA)factor_AMPA=-exp(-tp_AMPA/tau_r_AMPA)+exp(-tp_AMPA/tau_d_AMPA)factor_AMPA=1/factor_AMPAfactor_NMDA=-exp(-tp_NMDA/tau_r_NMDA)+exp(-tp_NMDA/tau_d_NMDA)factor_NMDA=1/factor_NMDAA_AMPA_step=exp(dt*((-1.0)/tau_r_AMPA))B_AMPA_step=exp(dt*((-1.0)/tau_d_AMPA))A_NMDA_step=exp(dt*((-1.0)/tau_r_NMDA))B_NMDA_step=exp(dt*((-1.0)/tau_d_NMDA))}BREAKPOINT{SOLVEstatemggate=1/(1+(mg/4.1(mM))*exp(0.063(/mV)*(-v)))g_AMPA=gmax*(B_AMPA-A_AMPA)g_NMDA=gmax*(B_NMDA-A_NMDA)*mggateg=g_AMPA+g_NMDAi_AMPA=g_AMPA*(v-e)i_NMDA=g_NMDA*(v-e)i=i_AMPA+i_NMDA}PROCEDUREstate(){A_AMPA=A_AMPA*A_AMPA_stepB_AMPA=B_AMPA*B_AMPA_stepA_NMDA=A_NMDA*A_NMDA_stepB_NMDA=B_NMDA*B_NMDA_step}NET_RECEIVE(weight,weight_AMPA,weight_NMDA,Psurv,tsyn(ms)){LOCALresultweight_AMPA=weightweight_NMDA=weight*NMDA_ratioINITIAL{tsyn=t}if(!(weight>0)){VERBATIMreturn;ENDVERBATIM}if(Fac>0){u=u*exp(-(t-tsyn_fac)/Fac)}else{u=Use}if(Fac>0){u=u+Use*(1-u)}tsyn_fac=tif(Rstate==0){Psurv=exp(-(t-tsyn)/Dep)result=urand()if(result>Psurv){Rstate=1if(verboseLevel>0){printf("Recovered!%fattime%g}}else{tsyn=tif(verboseLevel>0){printf("Failedtorecover!%fattime%g}}}if(Rstate==1){result=urand()if(result<u){tsyn=tRstate=0A_AMPA=A_AMPA+weight_AMPA*factor_AMPAB_AMPA=B_AMPA+weight_AMPA*factor_AMPAA_NMDA=A_NMDA+weight_NMDA*factor_NMDAB_NMDA=B_NMDA+weight_NMDA*factor_NMDAif(verboseLevel>0){printf("Release!%fattime%g}}else{if(verboseLevel>0){printf("Failure!%fattime%g}}}}PROCEDUREsetRNG(){VERBATIM{void**pv=(void**)(&_p_rng);if(ifarg(1)){*pv=nrn_random_arg(1);}else{*pv=(void*)0;}}ENDVERBATIM}FUNCTIONurand(){VERBATIMdoublevalue;if(_p_rng){value=nrn_random_pick(_p_rng);returnvalue;}else{ENDVERBATIMvalue=scop_random(1)VERBATIM}ENDVERBATIMurand=value}FUNCTIONtoggleVerbose(){verboseLevel=1-verboseLevel}