NEURON{POINT_PROCESSsyn_ampa_varRANGEtau_oRANGEtau_cRANGEerevRANGEsyn_stepRANGEi,varNONSPECIFIC_CURRENTiTHREADSAFEPOINTERrandObjPtr}UNITS{(nA)=(nanoamp)(uA)=(microamp)(mA)=(milliamp)(A)=(amp)(mV)=(millivolt)(mS)=(millisiemens)(uS)=(microsiemens)(molar)=(1/liter)(kHz)=(kilohertz)(mM)=(millimolar)(um)=(micrometer)(S)=(siemens)}PARAMETER{tau_o=0.2(ms)tau_c=3.0(ms)erev=0.0(mV)syn_step=1.25}ASSIGNED{v(mV)i(nA)varrandObjPtr}STATE{oc}INITIAL{o=0c=0}PROCEDUREseed(x){set_seed(x)}BREAKPOINT{SOLVEstatesMETHODcnexpi=(c-o)*(v-erev)}NET_RECEIVE(weight(uS)){var=ceil(5*randGen())o=o+syn_step*weight*2*(var-1)/10.0c=c+syn_step*weight*2*(var-1)/10.0}VERBATIMdoublenrn_random_pick(void*r);void*nrn_random_arg(intargpos);ENDVERBATIMFUNCTIONrandGen(){VERBATIMif(_p_randObjPtr){_lrandGen=nrn_random_pick(_p_randObjPtr);}else{hoc_execerror("multithreadrandominNetStim","onlyviahocRandom");}ENDVERBATIM}PROCEDUREnoiseFromRandom(){VERBATIMvoid**pv=(void**)(&_p_randObjPtr);if(ifarg(1)){*pv=nrn_random_arg(1);}else{*pv=(void*)0;}ENDVERBATIM}DERIVATIVEstates{o'=-o/tau_oc'=-c/tau_c}