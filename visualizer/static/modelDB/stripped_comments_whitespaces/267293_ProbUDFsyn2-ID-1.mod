NEURON{POINT_PROCESSProbUDFsyn2RANGEtau_r,tau_dRANGEUse,u,Dep,Fac,u0RANGEi,g,e,gmaxNONSPECIFIC_CURRENTiPOINTERrng}PARAMETER{tau_r=0.2(ms)tau_d=1.7(ms)Use=1.0(1)Dep=100(ms)Fac=10(ms)e=0(mV)gmax=.001(uS)u0=0}VERBATIM#include<stdlib.h>#include<stdio.h>#include<math.h>#ifndefNRN_VERSION_GTEQ_8_2_0doublenrn_random_pick(void*r);void*nrn_random_arg(intargpos);#defineRANDCAST#else#defineRANDCAST(Rand*)#endifENDVERBATIMASSIGNED{v(mV)i(nA)g(uS)factorrngweight_NMDA}STATE{AB}INITIAL{LOCALtpA=0B=0tp=(tau_r*tau_d)/(tau_d-tau_r)*log(tau_d/tau_r)factor=-exp(-tp/tau_r)+exp(-tp/tau_d)factor=1/factor}BREAKPOINT{SOLVEstateMETHODcnexpg=gmax*(B-A)i=g*(v-e)}DERIVATIVEstate{A'=-A/tau_rB'=-B/tau_d}NET_RECEIVE(weight,Pv,Pr,u,tsyn(ms)){INITIAL{Pv=1u=u0tsyn=t}if(Fac>0){u=u*exp(-(t-tsyn)/Fac)}else{u=Use}if(Fac>0){u=u+Use*(1-u)}Pv=1-(1-Pv)*exp(-(t-tsyn)/Dep)Pr=u*PvPv=Pv-u*Pvtsyn=tif(erand()<Pr){A=A+weight*factorB=B+weight*factor}}PROCEDUREsetRNG(){VERBATIM{void**pv=(void**)(&_p_rng);if(ifarg(1)){*pv=nrn_random_arg(1);}else{*pv=(void*)0;}}ENDVERBATIM}FUNCTIONerand(){VERBATIMdoublevalue;if(_p_rng){value=nrn_random_pick(RANDCAST_p_rng);returnvalue;}else{ENDVERBATIMerand=exprand(1)VERBATIM}ENDVERBATIMerand=value}