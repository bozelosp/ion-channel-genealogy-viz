NEURON{POINT_PROCESSPoissonTrigSynRANGEtau,refraction,gmax,e,i,g,k,firingPOINTERprob,randseedNONSPECIFIC_CURRENTi}UNITS{(nA)=(nanoamp)(mV)=(millivolt)(uS)=(microsiemens)}PARAMETER{tau=.1(ms)refraction=1(ms)gmax=0(uS)e=0(mV)randseed}ASSIGNED{i(nA)g(uS)k(/ms)firingprobv(mV)}CONSTANT{exp1=2.7182818284590452354}STATE{A(uS)G(uS)}INITIAL{k=1/tauA=0G=0firing=0if(!nrn_pointing(prob)){printf("PoissonTrigSyn}if(!nrn_pointing(randseed)){printf("PoissonTrigSyn}}BREAKPOINT{SOLVEstateMETHODsparsei=G*(v-e)g=G}KINETICstate{~A<->G(k,0)~G->(k)}NET_RECEIVE(weight){if(flag==0){if((prob>unitRand())&&(!firing)){state_discontinuity(A,A+gmax*exp1)firing=1if(refraction>=0){net_send(refraction,firing)}else{firing=0}}}else{firing=0}}FUNCTIONgetseedCD(){VERBATIM#defineRANDSEED_UINT(*((unsignedint*)(&randseed)))#defineGETSEEDCD(_lgetseedCD)GETSEEDCD=(double)RANDSEED_UINT;ENDVERBATIM}PROCEDUREinitseedCD(seed){VERBATIM#defineRANDSEED_UINT(*((unsignedint*)(&randseed)))#defineSEED(_lseed)RANDSEED_UINT=(int)SEED;ENDVERBATIM}FUNCTIONunitRand(){VERBATIM#defineRANDSEED_UINT(*((unsignedint*)(&randseed)))#defineUNITRAND(_lunitRand)RANDSEED_UINT=RANDSEED_UINT*1103515245+12345;UNITRAND=((RANDSEED_UINT>>16)&0x7FFF)/(((unsignedint)(0x7FFF))+1.0);ENDVERBATIM}