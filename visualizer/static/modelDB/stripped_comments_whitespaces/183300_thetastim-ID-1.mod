NEURON{ARTIFICIAL_CELLThetaStimRANGEinterval,number,start,actual_startRANGEnoiseRANGEouter_interval,outer_number,outer_startRANGEouter_noiseTHREADSAFEPOINTERdonotuse}PARAMETER{interval=25(ms)<1e-9,1e9>number=4<0,1e9>start=25(ms)noise=0<0,1>outer_interval=200(ms)<1e-9,1e9>outer_number=5<0,1e9>outer_start=25(ms)outer_noise=0<0,1>}ASSIGNED{event(ms)onispikedonotuseouter_event(ms)outer_onouter_ispikeactual_start}PROCEDUREseed(x){set_seed(x)}INITIAL{on=0ispike=0if(noise<0){noise=0}if(noise>1){noise=1}if(outer_noise<0){outer_noise=0}if(outer_noise>1){outer_noise=1}if((outer_start>=0&&outer_number>0)&&(number>0)){outer_on=1outer_event=outer_start+invl(outer_interval)-outer_interval*(1.-outer_noise)if(outer_event<0){outer_event=0}net_send(outer_event,13)}}PROCEDUREinit_sequence(t(ms)){if(number>0){on=1event=0ispike=0}}PROCEDUREinit_outer_sequence(t(ms)){if(outer_number>0){outer_on=1outer_event=0outer_ispike=0}}FUNCTIONinvl(mean(ms))(ms){if(mean<=0.){mean=.01(ms)}if(noise==0){invl=mean}else{invl=(1.-noise)*mean+noise*mean*erand()}}FUNCTIONouter_invl(mean(ms))(ms){if(mean<=0.){mean=.01(ms)}if(outer_noise==0){outer_invl=mean}else{outer_invl=(1.-outer_noise)*mean+outer_noise*mean*erand()}}VERBATIM#ifndefNRN_VERSION_GTEQ_8_2_0doublenrn_random_pick(void*r);void*nrn_random_arg(intargpos);#defineRANDCAST#else#defineRANDCAST(Rand*)#endifENDVERBATIMFUNCTIONerand(){VERBATIMif(_p_donotuse){_lerand=nrn_random_pick(RANDCAST_p_donotuse);}else{if(_nt!=nrn_threads){hoc_execerror("multithreadrandominNetStim","onlyviahocRandom");}ENDVERBATIMerand=exprand(1)VERBATIM}ENDVERBATIM}PROCEDUREnoiseFromRandom(){VERBATIM{IvocVect**pv=(IvocVect**)(&_p_donotuse);if(ifarg(1)){*pv=(IvocVect*)nrn_random_arg(1);}else{*pv=(IvocVect*)0;}}ENDVERBATIM}PROCEDUREnext_invl(){if(number>0){event=invl(interval)}if(ispike>=number){on=0}}PROCEDUREnext_outer_invl(){if(outer_number>0){outer_event=outer_invl(outer_interval)}if(outer_ispike>=outer_number){outer_on=0}}NET_RECEIVE(w){if(flag==0){if(w>0&&on==0){init_sequence(t)next_invl()event=event-interval*(1.-noise)net_send(event,1)}elseif(w<0){on=0}}if(flag==3){if(on==1){init_sequence(t)net_send(0,1)}}if(flag==1&&on==1){ispike=ispike+1net_event(t)next_invl()if(on==1){net_send(event,1)}}if(flag==13){if(outer_on==1){init_outer_sequence(t)on=1net_send(0,11)}}if(flag==11&&outer_on==1){on=1net_send(start,3)outer_ispike=outer_ispike+1next_outer_invl()if(outer_on==1){net_send(outer_event,11)}}}