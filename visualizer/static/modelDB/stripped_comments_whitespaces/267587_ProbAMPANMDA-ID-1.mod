NEURON{POINT_PROCESSProbAMPANMDARANGEtau_r_AMPA,tau_d_AMPA,tau_r_NMDA,tau_d_NMDARANGEUse,u,Dep,Fac,u0,weight_factor_NMDARANGEi,i_AMPA,i_NMDA,g_AMPA,g_NMDA,e,gmaxNONSPECIFIC_CURRENTi,i_AMPA,i_NMDAPOINTERrng}PARAMETER{tau_r_AMPA=0.2(ms)tau_d_AMPA=1.7(ms)tau_r_NMDA=0.29(ms)tau_d_NMDA=43(ms)Use=1.0(1)Dep=100(ms)Fac=10(ms)e=0(mV)mg=1(mM)mggategmax=.001(uS)u0=0weight_factor_NMDA=1}VERBATIM#include<stdlib.h>#include<stdio.h>#include<math.h>doublenrn_random_pick(void*r);void*nrn_random_arg(intargpos);ENDVERBATIMASSIGNED{v(mV)i(nA)i_AMPA(nA)i_NMDA(nA)g_AMPA(uS)g_NMDA(uS)factor_AMPAfactor_NMDArng}STATE{A_AMPAB_AMPAA_NMDAB_NMDA}INITIAL{LOCALtp_AMPA,tp_NMDAA_AMPA=0B_AMPA=0A_NMDA=0B_NMDA=0tp_AMPA=(tau_r_AMPA*tau_d_AMPA)/(tau_d_AMPA-tau_r_AMPA)*log(tau_d_AMPA/tau_r_AMPA)tp_NMDA=(tau_r_NMDA*tau_d_NMDA)/(tau_d_NMDA-tau_r_NMDA)*log(tau_d_NMDA/tau_r_NMDA)factor_AMPA=-exp(-tp_AMPA/tau_r_AMPA)+exp(-tp_AMPA/tau_d_AMPA)factor_AMPA=1/factor_AMPAfactor_NMDA=-exp(-tp_NMDA/tau_r_NMDA)+exp(-tp_NMDA/tau_d_NMDA)factor_NMDA=1/factor_NMDA}BREAKPOINT{SOLVEstateMETHODcnexpmggate=1/(1+exp(0.062(/mV)*-(v))*(mg/3.57(mM)))g_AMPA=gmax*(B_AMPA-A_AMPA)g_NMDA=gmax*(B_NMDA-A_NMDA)*mggatei_AMPA=g_AMPA*(v-e)i_NMDA=g_NMDA*(v-e)i=i_AMPA+i_NMDA}DERIVATIVEstate{A_AMPA'=-A_AMPA/tau_r_AMPAB_AMPA'=-B_AMPA/tau_d_AMPAA_NMDA'=-A_NMDA/tau_r_NMDAB_NMDA'=-B_NMDA/tau_d_NMDA}NET_RECEIVE(weight,Pv,Pv_tmp,Pr,u,tsyn(ms)){INITIAL{Pv=1u=u0tsyn=t}if(Fac>0){u=u*exp(-(t-tsyn)/Fac)}else{u=Use}if(Fac>0){u=u+Use*(1-u)}Pv_tmp=1-(1-Pv)*exp(-(t-tsyn)/Dep)Pr=u*Pv_tmpPv_tmp=Pv_tmp-u*Pv_tmpif(erand()<Pr){tsyn=tPv=Pv_tmpA_AMPA=A_AMPA+weight*factor_AMPAB_AMPA=B_AMPA+weight*factor_AMPAA_NMDA=A_NMDA+weight*weight_factor_NMDA*factor_NMDAB_NMDA=B_NMDA+weight*weight_factor_NMDA*factor_NMDA}}PROCEDUREsetRNG(){VERBATIM{void**pv=(void**)(&_p_rng);if(ifarg(1)){*pv=nrn_random_arg(1);}else{*pv=(void*)0;}}ENDVERBATIM}FUNCTIONerand(){VERBATIMdoublevalue;if(_p_rng){value=nrn_random_pick(_p_rng);returnvalue;}else{ENDVERBATIMerand=exprand(1)VERBATIM}ENDVERBATIM}