NEURON{POINT_PROCESSHalfGapELECTRODE_CURRENTiRANGEg,i,vgap,meang,meant,rg,rt,driftTHREADSAFEPOINTERdonotuseRANGEidRANGEgmax,gmin,vhalf}PARAMETER{gmax=1(nanosiemens)gmin=1(nanosiemens)vhalf=0(millivolt)slope4=10(/millivolt)meang=30(nanosiemens)meant=1000000(ms)drift=0rg=0rt=0event=0(ms)id=0}ASSIGNED{g(nanosiemens)v(millivolt)vgap(millivolt)i(nanoamp)donotuse}INITIAL{net_send(event,1)}FUNCTIONgv(x(millivolt))(nanosiemens){gv=(gmax-gmin)/(1+exp(slope4*(vhalf-x)))+gmin}BREAKPOINT{LOCALxif(gmax==gmin){g=gmaxi=g*(vgap-v)*(.001)}else{if(id>0){x=v-vgap}elseif(id<0){x=vgap-v}else{VERBATIMassert(0);ENDVERBATIM}g=gv(x)i=g*(vgap-v)*(.001)}}FUNCTIONgetpar(){gmax=mynormrand(meang/1(nanosiemens),rg)*1(nanosiemens)if(gmax<0){gmax=0}if(gmin!=0){gmin=gmax}meang=meang+drift*meangrg=rg+drift*rggetpar=mynormrand(meant/1(ms),rt)*1(ms)WHILE(getpar<=0){getpar=mynormrand(meant/1(ms),rt)*1(ms)}}NET_RECEIVE(w){LOCALeif(flag==1){e=getpar()net_send(e,1)}}VERBATIM#ifndefNRN_VERSION_GTEQ_8_2_0doublenrn_random_pick(void*r);void*nrn_random_arg(intargpos);#defineRANDCAST#else#defineRANDCAST(Rand*)#endifENDVERBATIMFUNCTIONmynormrand(mean,var){VERBATIMif(_p_donotuse){doublex=nrn_random_pick(RANDCAST_p_donotuse);_lmynormrand=x*_lvar+_lmean;}else{_lmynormrand=_lmean;}ENDVERBATIM}PROCEDUREsetRandom(){VERBATIM{void**pv=(void**)(&_p_donotuse);if(ifarg(1)){*pv=nrn_random_arg(1);}else{*pv=(void*)0;}}ENDVERBATIM}