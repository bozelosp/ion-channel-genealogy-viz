UNITS{(mA)=(milliamp)(mV)=(millivolt)(S)=(siemens)(pS)=(picosiemens)(um)=(micrometer)}NEURON{SUFFIXHHUSEIONnaREADenaWRITEinaUSEIONkREADekWRITEikNONSPECIFIC_CURRENTileakRANGEeleak,gleak,NFleakRANGEgnabar,gkbarRANGEgna,gkRANGEnm,gkmbarRANGEm_exp,h_exp,n_exp,km_expGLOBALgamma_na,gamma_k,gamma_kmRANGEkm_inf,tau_kmRANGEm_inf,h_inf,n_infRANGEtau_m,tau_h,tau_nRANGEtau_zn,tau_zm,tau_zkmRANGEvar_zn,var_zm,var_zkmRANGEnoise_zn,noise_zm,noise_zkmRANGENna,Nk,NkmGLOBALseed,hslow,hfastRANGEmu_zn,mu_zm,mu_zkmGLOBALvshiftGLOBALtaukm,NFTHREADSAFE}PARAMETER{gnabar=0.12(S/cm2)gkbar=0.036(S/cm2)gkmbar=.002(S/cm2)gleak=0.00001(S/cm2)eleak=-60(mV)NFleak=1gamma_na=10(pS)gamma_k=10(pS)gamma_km=10(pS)seed=1vshift=0taukm=1NF=1hslow=100hfast=0.3}STATE{mhnnmzn[3]zm[6]zkmzleak}ASSIGNED{ina(mA/cm2)ikdr(mA/cm2)ikm(mA/cm2)ik(mA/cm2)ileak(mA/cm2)gna(S/cm2)gk(S/cm2)gkm(S/cm2)ena(mV)ek(mV)dt(ms)area(um2)celsius(degC)v(mV)Nna(1)Nk(1)Nkm(1)m_exph_expn_expkm_expm_infh_infn_infkm_infnoise_zn[3]noise_zm[6]noise_zkmvar_zn[3]var_zm[6]var_zkmtau_m(ms)tau_h(ms)tau_n(ms)tau_km(ms)tau_zn[3]tau_zm[6]tau_zkmmu_zn[3]mu_zm[6]mu_zkm}INITIAL{Nna=ceil(((1e-8)*area)*(gnabar)/((1e-12)*gamma_na))Nk=ceil(((1e-8)*area)*(gkbar)/((1e-12)*gamma_k))Nkm=ceil(((1e-8)*area)*(gkmbar)/((1e-12)*gamma_km))rates(v)m=m_infh=h_infn=n_infnm=km_infzn[0]=0zn[1]=0zn[2]=0zn[3]=0zm[0]=0.zm[1]=0.zm[2]=0.zm[3]=0.zm[4]=0.zm[5]=0.zm[6]=0.zkm=0zleak=0set_seed(seed)}BREAKPOINT{SOLVEstatesgna=gnabar*(m*m*m*h+(zm[0]+zm[1]+zm[2]+zm[3]+zm[4]+zm[5]+zm[6]))ina=gna*(v-ena)gk=gkbar*(n*n*n*n+(zn[0]+zn[1]+zn[2]+zn[3]))ikdr=gk*(v-ek)gkm=gkmbar*(nm+zkm)ikm=gkm*(v-ek)ik=ikm+ikdrileak=gleak*(1+zleak)*(v-eleak)}PROCEDUREstates(){rates(v+vshift)m=m+m_exp*(m_inf-m)h=h+h_exp*(h_inf-h)n=n+n_exp*(n_inf-n)nm=nm+km_exp*(km_inf-nm)VERBATIMreturn0;ENDVERBATIM}PROCEDURErates(vm(mV)){LOCALa,b,m3_inf,n4_inf,sum,one_minus_m,one_minus_h,one_minus_n,iUNITSOFFa=-.6*vtrap((vm+30),-10)b=20*(exp((-1*(vm+55))/18))tau_m=1/(a+b)m_inf=a*tau_mone_minus_m=1.-m_infm3_inf=m_inf*m_inf*m_infa=0.4*(exp((-1*(vm+50))/20))b=6/(1+exp(-0.1*(vm+20)))tau_h=hslow/((1+exp((vm+30)/4))+(exp(-(vm+50)/2)))+hfasth_inf=1/(1+exp((vm+44)/4))one_minus_h=1.-h_inftau_zm[0]=tau_htau_zm[1]=tau_mtau_zm[2]=tau_m/2tau_zm[3]=tau_m/3tau_zm[4]=tau_m*tau_h/(tau_m+tau_h)tau_zm[5]=tau_m*tau_h/(tau_m+2*tau_h)tau_zm[6]=tau_m*tau_h/(tau_m+3*tau_h)var_zm[0]=1.0/numchan(Nna)*m3_inf*m3_inf*h_inf*one_minus_hvar_zm[1]=3.0/numchan(Nna)*m3_inf*m_inf*m_inf*h_inf*h_inf*one_minus_mvar_zm[2]=3.0/numchan(Nna)*m3_inf*m_inf*h_inf*h_inf*one_minus_m*one_minus_mvar_zm[3]=1.0/numchan(Nna)*m3_inf*h_inf*h_inf*one_minus_m*one_minus_m*one_minus_mvar_zm[4]=3.0/numchan(Nna)*m3_inf*m_inf*m_inf*h_inf*one_minus_m*one_minus_hvar_zm[5]=3.0/numchan(Nna)*m3_inf*m_inf*h_inf*one_minus_m*one_minus_m*one_minus_hvar_zm[6]=1.0/numchan(Nna)*m3_inf*h_inf*one_minus_m*one_minus_m*one_minus_m*one_minus_hFROMi=0TO6{mu_zm[i]=exp(-dt/tau_zm[i])noise_zm[i]=sqrt(var_zm[i]*(1-mu_zm[i]*mu_zm[i]))*normrand(0,NF)zm[i]=zm[i]*mu_zm[i]+noise_zm[i]}a=-0.02*vtrap((vm+40),-10)b=0.4*(exp((-1*(vm+50))/80))tau_n=1/(a+b)n_inf=a*tau_none_minus_n=1.-n_infn4_inf=n_inf*n_inf*n_inf*n_inftau_zn[0]=tau_ntau_zn[1]=tau_n/2tau_zn[2]=tau_n/3tau_zn[3]=tau_n/4var_zn[0]=4.0/numchan(Nk)*n4_inf*n_inf*n_inf*n_inf*one_minus_nvar_zn[1]=6.0/numchan(Nk)*n4_inf*n_inf*n_inf*one_minus_n*one_minus_nvar_zn[2]=4.0/numchan(Nk)*n4_inf*n_inf*one_minus_n*one_minus_n*one_minus_nvar_zn[3]=1.0/numchan(Nk)*n4_inf*one_minus_n*one_minus_n*one_minus_n*one_minus_nFROMi=0TO3{mu_zn[i]=exp(-dt/tau_zn[i])noise_zn[i]=sqrt(var_zn[i]*(1-mu_zn[i]*mu_zn[i]))*normrand(0,NF)zn[i]=zn[i]*mu_zn[i]+noise_zn[i]}a=-.001/taukm*vtrap((vm+30),-9)b=.001/taukm*vtrap((vm+30),9)tau_km=1/(a+b)km_inf=a*tau_kmtau_zkm=tau_kmvar_zkm=km_inf*(1-km_inf)/numchan(Nkm)mu_zkm=exp(-dt/tau_zkm)noise_zkm=sqrt(var_zkm*(1-mu_zkm*mu_zkm))*normrand(0,NF)zkm=zkm*mu_zkm+noise_zkmzleak=normrand(0,NFleak)m_exp=1-exp(-dt/tau_m)h_exp=1-exp(-dt/tau_h)n_exp=1-exp(-dt/tau_n)km_exp=1-exp(-dt/tau_km)UNITSON}FUNCTIONvtrap(x,y){if(fabs(exp(x/y)-1)<1e-6){vtrap=y*(1-x/y/2)}else{vtrap=x/(exp(x/y)-1)}}FUNCTIONmulnoise(mean,sd,power){LOCALi,avgavg=1FROMi=1TOpower{avg=avg*normrand(mean,sd)}mulnoise=avg}FUNCTIONnumchan(Nchannels){if(Nchannels>0){numchan=(Nchannels)}else{numchan=1}}