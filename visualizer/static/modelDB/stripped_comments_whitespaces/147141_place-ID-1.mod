NEURON{SUFFIXPLACEGLOBALINSTALLED,MAKE_GAUSSIAN,REFRACGLOBALDEBUG,PEAK,THRESHOLDGLOBALsamps_per_sec,scale_y,first_time_stamp,scale_xGLOBALMaxTime,AnalysisInterval,BinSize,IntervalStart,VERBOSE}PARAMETER{INSTALLED=0VERBOSE=0DEBUG=0MAKE_GAUSSIAN=1REFRAC=3PEAK=5.0THRESHOLD=1e-5samps_per_sec=0scale_y=0first_time_stamp=0scale_x=0MaxTime=1200AnalysisInterval=1200IntervalStart=0BinSize=250}ASSIGNED{}VERBATIM#include"bpf.h"#include"misc.h"voidKendallTauPairs(si1*dx,si1*dy,ui4NumEvents,ui4NumPairs,sf8*tau,sf8*z,sf8*prob);staticfloat**rate_map;staticdoublestorage[10];#defineMAP_YSZ32#defineMAP_XSZ32#defineYSZ256#defineXSZ256#defineMAX_RATE100.0#defineMAX_SPKS_PER_SAMP100#defineTIMESTAMP_UNITS_PER_SEC10000#defineTRUE1#defineFALSE0#definePARTS_PER_SAMP2staticdoublegaussaf(mu,sd,x)doublemu,sd,x;{doubleexponent,num,denom,z;doublevalue,max_value;z=(x-mu)/sd;exponent=-0.5*z*z;max_value=(1.0/(sd*(double)SQRT2PI));value=(exp(exponent)/(sd*(double)SQRT2PI));value/=max_value;return(value);}staticvoidMakeGaussianField(x,y,sd,xsz,ysz,peak,threshold,map)intx,y,xsz,ysz;doublesd;floatpeak,threshold,**map;{inti,j;doublehypot(),d;for(i=0;i<ysz;i++){for(j=0;j<xsz;j++){d=hypot((double)(i-y),(double)(j-x));map[i][j]=peak*gaussaf(0.0,sd,d);if(map[i][j]<threshold)map[i][j]=0.0;if(DEBUG==2&&map[i][j]!=0)printf("MAP:%d%d%g\n",i,j,map[i][j]);}}return;}staticintgenerate_spks(rate,max_rate,samps_per_sec)floatrate,max_rate;doublesamps_per_sec;{registerinti;registerdoubleprob;doubledrand48();intreduction_factor=1,parts_per_samp=PARTS_PER_SAMP;intn_spks;while(rate>=max_rate){rate/=2.0;reduction_factor*=2;}prob=(double)rate/(double)samps_per_sec/(double)parts_per_samp;n_spks=0;for(i=parts_per_samp*reduction_factor;i--;)if(prob>(-1.0*log(drand48())))n_spks++;returnn_spks;}staticchar*get_line(FILE*f,char*s,intiMaxLen){inti=0;while(fscanf(f,"%c",&s[i])!=EOF&&i<iMaxLen-1){if(s[i]=='\n'){s[i+1]='\0';returns;}i++;}return(NULL);}staticvoidinstruct(){printf("Callwithatime_seriesformatfileinTS_DIR.\n");printf("OutputtoSTS_DIR.\n");printf("Simulatesalocation-specificspiketrainusingthetrackintheTSfile.Positionalratesarederivedfroma2-DGaussianratemap\n");printf("oraratemapstoredasafile.Seeoptions.\n");printf("Options:\n");printf("\tF<filename>Don'tuseaGaussianfieldforthesimulation.UsetheratemapstoredinRATE_DIR/filename.\n");printf("\t\tRequiresoptionsXandY\n");printf("\tP<cyclesperminute>Modulateratewithaperiodicfunction.Givetheperiod(cyclespermin).\n");printf("\tS<Seedtherandomnumbergeneratorwithyourownintegerseed.Defaultisarandomseed.\n");printf("\tX<xresolutionofratemap>Thexdimensionresolutionoftheratemaparray.NecessaryforoptionF.Default:%d\n",MAP_XSZ);printf("\tY<yresolutionofratemap>Theydimensionresolutionoftheratemaparray.NecessaryforoptionF.Default:%d\n",MAP_YSZ);hxe();}staticintascending_int(unsignedint*a,unsignedint*b){if(*a>*b)return(1);if(*a<*b)return(-1);return(0);}ENDVERBATIMVERBATIMstaticdoubleglob(void*vv){inti,j,nx,ny,nz;double*x,*y,*z,last,cut,diff;nx=vector_instance_px(vv,&x);ny=vector_arg_px(1,&y);nz=vector_arg_px(2,&z);if(ny!=nz||ny<2){printf("Place:globERR0:ny!=nz%d%d\n",ny,nz);hxe();}cut=*getarg(3);for(last=x[0],i=1,j=0,y[0]=0;i<nx;i++){diff=x[i]-last;if(diff<0){printf("Place:globERRA:notmonotonic%g<gd\n",x[i],last);hxe();}if(diff>cut){z[j]=(double)i-1;j++;if(j>=ny){printf("Place:globERRB:OOR%d\n",ny);hxe();}y[j]=(double)i;}last=x[i];}z[j]=nx-1;vector_resize(vector_arg(1),j+1);vector_resize(vector_arg(2),j+1);return(double)j+1;}ENDVERBATIMVERBATIMstaticdoublecumul(void*vv){inti,j,nx,ny,nyn,fli;unsignedint*scr;double*x,*y,cut,fl;void*vvy;nx=vector_instance_px(vv,&x);ny=vector_arg_px(1,&y);vvy=vector_arg(1);cut=*getarg(2);if(nx<2){printf("cumul:ERRAnxtoosmall%d\n",nx);hxe();}vector_resize(vvy,ny=vector_buffer_size(vvy));scr=scrset(nx);for(i=0;i<nx;i++)scr[i]=i;nrn_mlh_gsort(x,scr,nx,cmpdfn);fl=floor(x[scr[nx-1]]);if((fli=(int)fl)>=ny-1){printf("cumul:ERRBfli>=ny%d%d\n",fli+1,ny);hxe();}if(fl>=cut){nyn=fli+2;for(i=cut;i<nyn-1;i++)y[i]=1;for(i=0;i<cut;i++)y[i]=0;y[fli+1]=0;for(i=nx-2;i>=0&&x[scr[i]]>=cut;i--){if(x[scr[i]]<fl)fli=(int)(fl=floor(x[scr[i]]));for(j=cut;j<=fli;j++)y[j]++;}}elsenyn=0;vector_resize(vvy,nyn);return(double)nyn;}ENDVERBATIMVERBATIMstaticdoublesimts(void*vv){FILE*fopen(),*ifp,*ofp,*ofq,*rfp;Object*ob;unsignedcharxys[3];inti,j,k,s,mt,fflag;intop,AngularModulation;intx,y,nmb_header_lines;doublecenter_x,center_y,sd,value;doubletime;doublemax_rate;charline[256],keyword[64],*get_line(),rate_file[256];charin_file[256],out_file[256],file_name[256];doublemodulate,peak,threshold;doubleCyclesPerMin;doublemap_x,map_y,collapse_x,collapse_y;voidinstruct(),MakeGaussianField();intfound,n_samps;doublesample_time,timestamp_units_per_samp;intSampsPerCycle,SampsPerHalfCycle,samps;double*xx,*yy,jit,*loc[2];intnx,ny,maxsz,ii,q,sflag,nloc[2];void*vv1,*vloc[2];nx=vector_instance_px(vv,&xx);maxsz=vector_buffer_size(vv);vector_resize(vv,maxsz);sflag=0;jit=0.;ob=*hoc_objgetarg(1);if(strncmp(hoc_object_name(ob),"List",4)==0){fflag=0;for(i=0;i<2;i++)nloc[i]=list_vector_px2(ob,i,&loc[i],&vloc[i]);if(nloc[0]!=nloc[1]){printf("simtst_PLACEERRA:%d%d\n",nloc[0],nloc[1]);hxe();}}else{fflag=1;ifp=hoc_obj_file_arg(1);}if(ifarg(2)){if(hoc_is_double_arg(2)){jit=*getarg(2)*10.;}else{ny=vector_arg_px(2,&yy);vv1=vector_arg(2);if((ii=vector_buffer_size(vv1))<maxsz){fprintf(stderr,"2ndvecmaxsz(%d)shouldbeatleast%d\n",ii,maxsz);hxe();}vector_resize(vv1,maxsz);sflag=1;}}q=found=0;AngularModulation=FALSE;max_rate=MAX_RATE;map_x=MAP_XSZ;map_y=MAP_YSZ;while(0)switch(op){case'F':;break;case'P':AngularModulation=TRUE;break;case'S':;break;case'X':map_x=MAP_XSZ;break;case'Y':map_y=MAP_YSZ;break;default:instruct();}if(rate_map==NULL){if((rate_map=(float**)calloc((size_t)YSZ,sizeof(float*)))==NULL){fprintf(stderr,"Can'tallocate\n");hxe();}for(i=0;i<YSZ;i++)if((rate_map[i]=(float*)calloc(XSZ,sizeof(float)))==NULL){fprintf(stderr,"Can'tallocate\n");hxe();}}if(MAKE_GAUSSIAN_PLACE==1){center_x=center_y=0.0;while(hypot(center_x-(double)(XSZ/2.0),center_y-(double)(YSZ/2.0))>(XSZ/2.0)){center_x=(double)(XSZ*drand48());center_y=(double)(YSZ*drand48());}peak=PEAK;threshold=THRESHOLD;sd=0.2*XSZ/2.0;MakeGaussianField((int)center_x,(int)center_y,sd,(int)XSZ,(int)YSZ,peak,threshold,rate_map);collapse_x=collapse_y=1.0;storage[0]=center_x;storage[1]=center_y;storage[2]=collapse_x;storage[3]=collapse_y;storage[4]=peak;storage[5]=threshold;storage[6]=sd;}elseif(MAKE_GAUSSIAN==2){for(y=0;y<(int)map_y;y++)for(x=0;x<(int)map_x;x++)fscanf(rfp,"%f",&(rate_map[y][x]));collapse_x=(double)XSZ/(double)map_x;collapse_y=(double)YSZ/(double)map_y;}else{center_x=storage[0];center_y=storage[1];collapse_x=storage[2];collapse_y=storage[3];peak=storage[4];threshold=storage[5];sd=storage[6];}nmb_header_lines=found=0;if(fflag){fseek(ifp,0,SEEK_SET);fscanf(ifp,"%d\n",&nmb_header_lines);for(i=1;i<nmb_header_lines;i++){get_line(ifp,line,256);sscanf(line,"%s%lf",keyword,&value);if(!strcmp(keyword,"%SAMPLING_INTERVAL(samps/sec)")){samps_per_sec=value;found++;}elseif(!strcmp(keyword,"%SCALE_Y(RatioTracktoMapPixels)")){scale_y=value;found++;}elseif(!strcmp(keyword,"%FIRST_TIMESTAMP(100usUnits)")){first_time_stamp=value;found++;}elseif(!strcmp(keyword,"%SCALE_X(RatioTracktoMapPixels)")){scale_x=value;found++;}}if(found!=4){printf("PLACEsimts()Onlyfound%d/4.Fileiscorrupt\n",found);hxe();}}timestamp_units_per_samp=(int)(TIMESTAMP_UNITS_PER_SEC/samps_per_sec);if(AngularModulation){SampsPerCycle=(int)(samps_per_sec*60.0/CyclesPerMin);SampsPerHalfCycle=(int)(SampsPerCycle/2.0);}n_samps=0;modulate=1.0;while(1){if(fflag){if(fread(xys,sizeof(unsignedchar),3,ifp)!=3)break;for(i=0;i<xys[2];i++)fread(&mt,sizeof(int),1,ifp);x=xys[0];y=xys[1];}else{if(n_samps>=nloc[0])break;x=loc[0][n_samps];y=loc[1][n_samps];}n_samps++;if(AngularModulation){samps=(n_samps%SampsPerCycle);if(samps>SampsPerHalfCycle)samps=SampsPerCycle-samps;modulate=(double)samps/(double)SampsPerHalfCycle;}s=generate_spks(modulate*rate_map[(int)(y/collapse_y)][(int)(x/collapse_x)],\max_rate,samps_per_sec);if(sflag){if(s>0){xx[q]=(double)(n_samps+drand48())*timestamp_units_per_samp*0.1;yy[q]=(double)s;q++;}}else{sample_time=n_samps*timestamp_units_per_samp;if(q>0&&s>0&&jit>0.){sample_time+=(jit*(1.-2.*drand48()));while(sample_time<xx[q-1]){sample_time=n_samps*timestamp_units_per_samp+(jit*(1.-2.*drand48()));}}for(i=0;i<s&&q<maxsz;i++,q++){if(i==0){xx[q]=0.1*(sample_time+drand48()*timestamp_units_per_samp);while(q>0&&xx[q]<xx[q-1]+REFRAC)xx[q]+=drand48()*timestamp_units_per_samp;}else{xx[q]=xx[q-1]+REFRAC+0.1*drand48()*timestamp_units_per_samp;}if(DEBUG==1)printf("%d:%20.2lf:%20.2lf%d\n",q,sample_time,xx[q],s);}}if(q>maxsz)break;}vector_resize(vv,q);if(sflag)vector_resize(vv1,q);return(double)q;}ENDVERBATIMVERBATIMstaticdoublekendall(void*vv){ui4i,j,k,m,n,p,q,maxsz,nx,av[VRRY],bv[VRRY],num,numb,indflag,match;ui4MaxBins,NumPairs,*SpikeCounts;si1**Diffs,dif;Object*ob,*ob2;double*x,*avo[VRRY],*bvo[VRRY],val[VRRY];doubleIntStart,IntervalStop,AnInt,MaxT;doubletau,z,prob;void*vva[VRRY],*vvb[VRRY];voidKendallTauPairs();nx=vector_instance_px(vv,&x);ob=*hoc_objgetarg(1);ob2=*hoc_objgetarg(2);num=ivoc_list_count(ob);numb=ivoc_list_count(ob2);if(num>VRRY)hoc_execerror("kendall****ERRA****:canonlyhandleVRRYvectors",0);if(numb!=4)hoc_execerror("kendall****ERRB****:2ndlistcountshouldbe4:i,j,tau,p",0);for(i=0;i<num;i++)av[i]=list_vector_px2(ob,i,&avo[i],&vva[i]);for(i=0;i<numb;i++){bv[i]=list_vector_px3(ob2,i,&bvo[i],&vvb[i],1);if(bv[0]!=bv[i]){printf("kendall****ERRC2****%d%d%d\n",i,bv[0],bv[i]);hoc_execerror("Vectorsmustallbesamesize:",0);}}Diffs=(si1**)calloc(num,sizeof(si1*));AnInt=AnalysisInterval*1e3;MaxT=MaxTime*1e3;MaxBins=(ui4)AnInt/BinSize;NumPairs=(ui4)MaxBins*(MaxBins-1);SpikeCounts=(ui4*)calloc(MaxBins,sizeof(ui4));for(i=0;i<num;i++){Diffs[i]=(si1*)calloc(NumPairs,sizeof(si1));}IntStart=IntervalStart*1e3;IntervalStop=IntStart+AnInt;while(IntervalStop<=MaxT){for(i=0;i<num;i++){for(j=0;j<MaxBins;j++)SpikeCounts[j]=0;for(j=0;j<av[i];j++){if(avo[i][j]<IntStart)continue;if(avo[i][j]>IntervalStop)break;SpikeCounts[(int)((avo[i][j]-IntStart)/BinSize)]++;}for(k=0,n=0;k<MaxBins;k++){for(j=(k+1);j<MaxBins;j++,n++){if(dif=(SpikeCounts[k]-SpikeCounts[j])){Diffs[i][n]=(dif>0)?1:-1;}elseDiffs[i][n]=0;}}}for(i=0,k=0;i<num;i++){for(j=i+1;j<num;j++,k++){KendallTauPairs(Diffs[i],Diffs[j],MaxBins,NumPairs,&tau,&z,&prob);if(VERBOSE)printf("%g%g%d%d%0.6lf%0.3lf%0.3lf\n",\IntStart/1e3,IntervalStop/1e3,i,j,tau,z,prob);if(k>=bv[0]){printf("PLACEkendall()ERRDoutofroom:%d%d\n",k,bv[0]);hxe();}bvo[0][k]=(double)i;bvo[1][k]=(double)j;bvo[2][k]=tau;bvo[3][k]=prob;}}IntStart+=AnInt;IntervalStop+=AnInt;}for(j=0;j<numb;j++)vector_resize(vvb[j],k);return(double)k;}staticdoublekendal2(void*vv){ui4i,n,j,k,MaxBins,NumPairs;double*x,*y,tau,z,prob;;si1*Dx,*Dy;si4difx,dify;ui4LeftNum=0,RightNum=0;si4Numerator=0;si1dxdy;sf8Variance;ui4NumEvents;MaxBins=vector_instance_px(vv,&x);if((i=vector_arg_px(1,&y))!=MaxBins){printf("kenallERRA:%d%d\n",n,MaxBins);hxe();}NumPairs=(ui4)MaxBins*(MaxBins-1)/2;if(VERBOSE>1)printf("NumPairs=%d,MaxBins=%d\n",NumPairs,MaxBins);Dx=(si1*)calloc(NumPairs,sizeof(si1));if(!Dx){printf("kendal2ERR0:outofmem!\n");hxe();}Dy=(si1*)calloc(NumPairs,sizeof(si1));if(!Dy){printf("kendal2ERR1:outofmem!\n");hxe();}for(k=0,n=0;k<MaxBins;k++)for(j=(k+1);j<MaxBins;j++,n++){if(difx=x[k]-x[j])Dx[n]=(difx>0)?1:-1;if(dify=y[k]-y[j])Dy[n]=(dify>0)?1:-1;}if(VERBOSE)printf("n=%d,NumPairs=%d\n",n,NumPairs);KendallTauPairs(Dx,Dy,MaxBins,NumPairs,&tau,&z,&prob);if(VERBOSE)printf("tau:%gz:%gp:%g\n",tau,z,prob);free(Dx);free(Dy);returntau;}staticdoublekend2(void*vv){ui4i,n,j,k,pw,MaxBins,NumPairs;double*x,*y,tau,z,prob;;si1*Dx,*Dy;si4difx,dify;MaxBins=vector_instance_px(vv,&x);if((i=vector_arg_px(1,&y))!=MaxBins){printf("kend2ERRA:%d%d\n",n,MaxBins);hxe();}if(ifarg(2))pw=1;elsepw=0;NumPairs=(ui4)(MaxBins-1);Dx=(si1*)calloc(NumPairs,sizeof(si1));Dy=(si1*)calloc(NumPairs,sizeof(si1));for(k=0,n=0;k<MaxBins-1;k++,n++){j=(k+1);if(difx=x[k]-x[j])Dx[n]=(difx>0)?1:-1;if(dify=y[k]-y[j])Dy[n]=(dify>0)?1:-1;}KendallTauPairs(Dx,Dy,MaxBins,NumPairs,&tau,&z,&prob);if(VERBOSE>0)printf("tau:%gz:%gp:%g\n",tau,z,prob);free(Dx);free(Dy);returntau;}voidKendallTauPairs(si1*dx,si1*dy,ui4NumEvents,ui4NumPairs,sf8*tau,sf8*z,sf8*prob){sf8erfcc(sf8x);ui4i;ui4LeftNum=0,RightNum=0;si4Numerator=0;si1dxdy;sf8Variance;for(i=0;i<NumPairs;i++){dxdy=dx[i]*dy[i];if(dxdy){LeftNum++;RightNum++;dxdy>0.0?Numerator++:Numerator--;}else{if(dy[i])LeftNum++;elseif(dx[i])RightNum++;}}if(LeftNum&&RightNum){*tau=(sf8)Numerator/(sqrt((sf8)LeftNum)*sqrt((sf8)RightNum));Variance=(sf8)(4.0*NumEvents+10.0)/(sf8)(9.0*NumEvents*(NumEvents-1.0));*z=(*tau)/sqrt(Variance);*prob=erfcc(fabs(*z)/1.4142136);}else{*tau=*z=0.0;*prob=1.0;}return;}doubleerfcc(doublex){doublemt,z,ans;z=fabs(x);mt=1.0/(1.0+0.5*z);ans=mt*exp(-z*z-1.26551223+mt*(1.00002368+mt*(0.37409196+mt*(0.09678418+mt*(-0.18628806+mt*(0.27886807+mt*(-1.13520398+mt*(1.48851587+mt*(-0.82215223+mt*0.17087277)))))))));returnx>=0.0?ans:2.0-ans;}ENDVERBATIMVERBATIMstaticdoublemkgaussfield(void*vv){doublex,y,peak,threshold,sd,d,*map;inti,j,nx,maxsz;nx=vector_instance_px(vv,&map);maxsz=vector_buffer_size(vv);if(maxsz<XSZ*YSZ){printf("mkgasussfieldERRvectortoosmall%d<%d",maxsz,XSZ*YSZ);hxe();}vector_resize(vv,XSZ*YSZ);x=y=0.0;while(hypot(x-(double)(XSZ/2.0),y-(double)(YSZ/2.0))>(XSZ/2.0)){x=(double)(XSZ*drand48());y=(double)(YSZ*drand48());}peak=60.0;threshold=0.5;sd=0.2*XSZ/2.0;for(i=0;i<YSZ;i++){for(j=0;j<XSZ;j++){d=hypot((double)(i-y),(double)(j-x));map[i*XSZ+j]=peak*gaussaf(0.0,sd,d);if(map[i*XSZ+j]<threshold)map[i*XSZ+j]=0.0;}}}ENDVERBATIMVERBATIMstaticdoubledumpratemap(void*vv){inti,j,k,nx,maxsz;double*map;if(rate_map==NULL){printf("rate_mapnotallocated\n");hxe();}nx=vector_instance_px(vv,&map);maxsz=vector_buffer_size(vv);if(maxsz<XSZ*YSZ){printf("dumpratemapERRvectortoosmall%d<%d\n",maxsz,XSZ*YSZ);hxe();}vector_resize(vv,XSZ*YSZ);for(i=0;i<YSZ;i++){for(j=0;j<XSZ;j++){map[i*XSZ+j]=rate_map[i][j];}}}ENDVERBATIMVERBATIMstaticdoublerd(void*vv){unsignedcharx,y,s;unsignedinti,j,n,time,beg,nx,ny,maxnx,locflag,linflag;unsignedintmaxsz,k,nmb_header_lines,found;interr;double*xx,*xloc,*yloc,*xlin,value,errtol;void*vv1,*vv2,*vv4;charline[4196],keyword[4196];FILE*fp,*hoc_obj_file_arg();fp=hoc_obj_file_arg(1);vector_instance_px(vv,&xx);if((maxsz=vector_buffer_size(vv))<1){maxsz=100;xx=vector_newsize(vv,maxsz);}elsevector_resize(vv,maxsz);err=-1;maxnx=locflag=linflag=0;if(ifarg(3)){nx=vector_arg_px(2,&xloc);vv1=vector_arg(2);maxnx=vector_buffer_size(vv1);ny=vector_arg_px(3,&yloc);vv2=vector_arg(3);k=vector_buffer_size(vv2);if(k!=maxnx){printf("rd_PLACE:ERRAnotsamesize:%d%d\n",k,maxnx);hxe();}vector_resize(vv1,maxnx);vector_resize(vv2,maxnx);locflag=1;}elseif(ifarg(2)&&hoc_is_double_arg(2)){errtol=*getarg(2);err=0;}elseif(ifarg(2)){linflag=1;vv1=vector_arg(2);xlin=vector_newsize(vv1,maxsz);}fseek(fp,0,SEEK_SET);found=0;fscanf(fp,"%d\n",&nmb_header_lines);for(i=1;i<nmb_header_lines;i++){get_line(fp,line,256);sscanf(line,"%s%lf",keyword,&value);if(!strcmp(keyword,"%SAMPLING_INTERVAL(samps/sec)")){samps_per_sec=value;found++;}elseif(!strcmp(keyword,"%SCALE_Y(RatioTracktoMapPixels)")){scale_y=value;found++;}elseif(!strcmp(keyword,"%FIRST_TIMESTAMP(100usUnits)")){first_time_stamp=value;found++;}elseif(!strcmp(keyword,"%SCALE_X(RatioTracktoMapPixels)")){scale_x=value;found++;}}if(found!=4){printf("PLACErd()Onlyfound%d/4.Fileiscorrupt\n",found);hxe();}for(n=0,j=0,k=0;fread(&x,sizeof(unsignedchar),1,fp)!=0;n++){fread(&y,sizeof(unsignedchar),1,fp);fread(&s,sizeof(unsignedchar),1,fp);for(i=0;i<s;i++){if(!fread(&time,sizeof(unsignedint),1,fp))printf("rd_PLACE:WARNZcouldntreadspiketime%dof%datbyte%d\n",i+1,s,ftell(fp));if(k>=maxsz){xx=vector_newsize(vv,maxsz*=2);if(linflag)xlin=vector_newsize(vv1,maxsz);}if(linflag)xlin[k]=(double)n+1.;xx[k++]=0.1*(double)(time);if(err>=0&&(xx[k-1]<((n-1)*1e3/samps_per_sec-errtol)||xx[k-1]>n*1e3/samps_per_sec+errtol)){if(VERBOSE){printf("rdERRB:%d:%g(%lf:%lf)",n,xx[k-1],((n-1)*1e3/samps_per_sec),n*1e3/samps_per_sec);}err++;}}if(locflag){if(j>=maxnx){maxnx*=2;xloc=vector_newsize(vv1,maxnx);yloc=vector_newsize(vv2,maxnx);}xloc[j]=(double)x;yloc[j]=(double)y;j++;}}vector_resize(vv,k);if(linflag)vector_resize(vv1,k);if(locflag){vector_resize(vv1,j);vector_resize(vv2,j);}if(err>0)return(double)-err;elsereturn(double)n*1e3/samps_per_sec;}ENDVERBATIMVERBATIMstaticdoublerdtts(void*vv){unsignedcharx,y,s;unsignedinti,j,n,time,tt,beg,nx,ny,maxnx,locflag;unsignedintmaxsz,k,nmb_header_lines,found;interr;double*xx,*tvec,*xloc,*yloc,value,errtol;void*vv1,*vv2,*vv3;charline[4196],keyword[4196];FILE*fp,*hoc_obj_file_arg();fp=hoc_obj_file_arg(1);vector_instance_px(vv,&xx);if((maxsz=vector_buffer_size(vv))<1){maxsz=100;xx=vector_newsize(vv,maxsz);}elsevector_resize(vv,maxsz);err=-1;if(ifarg(3)){nx=vector_arg_px(2,&xloc);vv1=vector_arg(2);maxnx=vector_buffer_size(vv1);ny=vector_arg_px(3,&yloc);vv2=vector_arg(3);ny=vector_arg_px(4,&tvec);vv3=vector_arg(4);xloc=vector_newsize(vv1,maxnx);yloc=vector_newsize(vv2,maxnx);tvec=vector_newsize(vv3,maxnx);locflag=1;}else{maxnx=locflag=0;if(ifarg(2))errtol=*getarg(2);err=0;}fseek(fp,0,SEEK_SET);found=0;fscanf(fp,"%d\n",&nmb_header_lines);for(i=1;i<nmb_header_lines;i++){get_line(fp,line,256);sscanf(line,"%s%lf",keyword,&value);if(!strcmp(keyword,"%SAMPLING_INTERVAL(samps/sec)")){samps_per_sec=value;found++;}elseif(!strcmp(keyword,"%SCALE_Y(RatioTracktoMapPixels)")){scale_y=value;found++;}elseif(!strcmp(keyword,"%FIRST_TIMESTAMP(100usUnits)")){first_time_stamp=value;found++;}elseif(!strcmp(keyword,"%SCALE_X(RatioTracktoMapPixels)")){scale_x=value;found++;}}if(found!=4){printf("PLACErd()Onlyfound%d/4.Fileiscorrupt\n",found);hxe();}for(n=0,j=0,k=0;fread(&tt,sizeof(unsignedint),1,fp)!=0;n++){fread(&x,sizeof(unsignedchar),1,fp);fread(&y,sizeof(unsignedchar),1,fp);fread(&s,sizeof(unsignedchar),1,fp);for(i=0;i<s;i++){if(!fread(&time,sizeof(unsignedint),1,fp))printf("rd_PLACE:WARNZcouldntreadspiketime%dof%datbyte%d\n",i+1,s,ftell(fp));if(k>=maxsz)xx=vector_newsize(vv,maxsz*=2);xx[k++]=0.1*(double)(time);if(err>=0&&(xx[k-1]<((n-1)*1e3/samps_per_sec-errtol)||xx[k-1]>n*1e3/samps_per_sec+errtol)){if(VERBOSE){printf("rdERRB:%d:%g(%lf:%lf)",n,xx[k-1],((n-1)*1e3/samps_per_sec),n*1e3/samps_per_sec);}err++;}}if(locflag){if(j>=maxnx){maxnx*=2;tvec=vector_newsize(vv3,maxnx);xloc=vector_newsize(vv1,maxnx);yloc=vector_newsize(vv2,maxnx);}tvec[j]=0.1*(double)tt;xloc[j]=(double)x;yloc[j]=(double)y;j++;}}vector_resize(vv,k);if(locflag){vector_resize(vv1,j);vector_resize(vv2,j);vector_resize(vv3,j);}if(err>0)return(double)-err;elsereturn(double)n*1e3/samps_per_sec;}ENDVERBATIMVERBATIMsi1*sscanfLine(si1*dp,si1*s){inti=0;*s=(si1)0x0;while(sscanf(dp,"%c",s+i)!=EOF){dp++;if(*(s+i)=='\n'){*(s+i+1)='\0';returns;}++i;}*(s+i)='\0';returns;}#defineDEBUGPR(x)printf("HERE%d\n",x);fflush(stdout);si4ReadBPFHeader(ui1*dp,ui4*BPFRecordSizes,si2*Gains,si4*AcquisitionSystem,ui4*EEGChList,ui4*BPFRecordTypeNumbers){ui1VerifyRecordFormat(ui1*,ui4*,ui1*,si1*,si1*,ui1);ui1*FindHeaderStart(),*FindHeaderEnd(),*FindSection(),*FindSectionEnd();voidGetRecordSizes();ui1BPFRecordTypes[256];ui1*HeaderStart,*HeaderEnd,*SectionStart,*SectionEnd;si1KeyWordString[256],Encoding[256],**Parameters;si4Type,NumberOfParameters,NumEEGChannels;si4GetRecordTypesUsed(),FindKeyWord();HeaderStart=FindHeaderStart(dp);if(HeaderStart==NULL){fprintf(MyStdErr,"\nCan'tfindstartofheader(%s).\nWrongFileFormat.\n",HEADER_BEGIN_LABEL);return(-1);}dp=(HeaderStart+strlen(HEADER_BEGIN_LABEL));sscanf((si1*)dp,"%s",KeyWordString);if(strstr(KeyWordString,BPF_HEADER_TYPE)==NULL){fprintf(MyStdErr,"ThisisnotaBPFfile.Itisa%sfile.\n",KeyWordString);return(-1);}dp=HeaderStart;SectionStart=FindSection(dp,SECTION_DATABASE_INFORMATION);if(SectionStart==NULL){fprintf(MyStdErr,"\nCan'tfindHeadersection%s.\nWrongFileFormat.\n",SECTION_DATABASE_INFORMATION);return(-1);}dp=SectionStart;*AcquisitionSystem=ACX;if(!FindKeyWord(SectionStart,ACQUISITION_SYSTEM_LABEL,KeyWordString,Encoding)){printf("AcXAcquisitionSystem\n");}else{Type=GetType(KeyWordString);switch(Type){case-1:fprintf(MyStdErr,"KeyWord.integerformatnotrespectedin:%s\nWrongFileFormat.\n",KeyWordString);return(0);case0:NumberOfParameters=GetASCIIEncoding(Encoding,&Parameters);if(NumberOfParameters==1){if(strcasestr(Parameters[0],"Axona")){*AcquisitionSystem=AXONA;if(VERBOSE)printf("AXONAAcquisitionSystem\n");}}break;default:fprintf(MyStdErr,"%smustbeASCIIencoded\nWrongFileFormat.\n",ACQUISITION_SYSTEM_LABEL);return(0);}}dp=HeaderStart;SectionStart=FindSection(dp,SECTION_SETUP_INFORMATION);if(SectionStart==NULL){fprintf(MyStdErr,"\nCan'tfindHeadersection%s.\nWrongFileFormat.\n",SECTION_SETUP_INFORMATION);return(-1);}dp=SectionStart;NumEEGChannels=GetRecordTypesUsed(BPFRecordTypeNumbers,dp,EEGChList);if(!GetGainsList(Gains,dp))return-1;SectionEnd=FindSectionEnd(SectionStart);if(SectionEnd==NULL)fprintf(MyStdErr,"\nCan'tfindendofHeaderSection(%s).\nWrongFileFormat.\n",SECTION_SETUP_INFORMATION);dp=HeaderStart;SectionStart=FindSection(dp,SECTION_RECORD_FORMAT_INFORMATION);if(SectionStart==NULL){fprintf(MyStdErr,"\nCan'tfindsection%s.Wrongdataformat\n",SECTION_RECORD_FORMAT_INFORMATION);return(-1);}if(BPFRecordTypeNumbers[EEG_BPF_REC_TYPE]){BPFRecordSizes[EEG_BPF_REC_TYPE]=BPFRecordTypeNumbers[EEG_BPF_REC_TYPE]*EEG_BPF_REC_DATA_SIZE+EEG_BPF_REC_ID_SIZE;if(!VerifyRecordFormat(BPFRecordTypes,BPFRecordSizes,SectionStart,EEG_ID,EEG_RECORD_FORMAT,EEG_BPF_REC_TYPE))return(-1);}if(BPFRecordTypeNumbers[SINGLE_BPF_REC_TYPE]){if(!VerifyRecordFormat(BPFRecordTypes,BPFRecordSizes,SectionStart,SINGLE_ID,SINGLE_RECORD_FORMAT,SINGLE_BPF_REC_TYPE))return(-1);}if(BPFRecordTypeNumbers[STEREO_BPF_REC_TYPE]){if(!VerifyRecordFormat(BPFRecordTypes,BPFRecordSizes,SectionStart,STEREO_ID,STEREO_RECORD_FORMAT,STEREO_BPF_REC_TYPE))return(-1);}if(BPFRecordTypeNumbers[TETRODE_BPF_REC_TYPE]){if(!VerifyRecordFormat(BPFRecordTypes,BPFRecordSizes,SectionStart,TETRODE_ID,TETRODE_RECORD_FORMAT,TETRODE_BPF_REC_TYPE))return(-1);}if(BPFRecordTypeNumbers[SYNC_BPF_REC_TYPE]){if(!VerifyRecordFormat(BPFRecordTypes,BPFRecordSizes,SectionStart,SYNC_ID,SYNC_RECORD_FORMAT,SYNC_BPF_REC_TYPE))return(-1);}if(BPFRecordTypeNumbers[ROOM_POSITION_BPF_REC_TYPE]){if(!VerifyRecordFormat(BPFRecordTypes,BPFRecordSizes,SectionStart,ROOM_POSITION_ID,ROOM_POSITION_RECORD_FORMAT,ROOM_POSITION_BPF_REC_TYPE))return(-1);}if(BPFRecordTypeNumbers[ARENA_POSITION_BPF_REC_TYPE]){if(!VerifyRecordFormat(BPFRecordTypes,BPFRecordSizes,SectionStart,ARENA_POSITION_ID,ARENA_POSITION_RECORD_FORMAT,ARENA_POSITION_BPF_REC_TYPE))return(-1);}if(BPFRecordTypeNumbers[KEY_EVENT_BPF_REC_TYPE]){VerifyRecordFormat(BPFRecordTypes,BPFRecordSizes,SectionStart,KEY_EVENT_ID,KEY_EVENT_RECORD_FORMAT,KEY_EVENT_BPF_REC_TYPE);}if(BPFRecordTypeNumbers[INPUT_EVENT_BPF_REC_TYPE]){VerifyRecordFormat(BPFRecordTypes,BPFRecordSizes,SectionStart,INPUT_EVENT_ID,INPUT_EVENT_RECORD_FORMAT,INPUT_EVENT_BPF_REC_TYPE);}if(BPFRecordTypeNumbers[OUTPUT_EVENT_BPF_REC_TYPE]){VerifyRecordFormat(BPFRecordTypes,BPFRecordSizes,SectionStart,OUTPUT_EVENT_ID,OUTPUT_EVENT_RECORD_FORMAT,OUTPUT_EVENT_BPF_REC_TYPE);}SectionEnd=FindSectionEnd(SectionStart);if(SectionEnd==NULL)fprintf(MyStdErr,"\nCan'tfindendofHeaderSection(%s).\nWrongFileFormat.\n",SECTION_RECORD_FORMAT_INFORMATION);HeaderEnd=FindHeaderEnd(SectionEnd);if(HeaderEnd==NULL){fprintf(MyStdErr,"\nCan'tfindendofheader.Wrongdataformat\n");return(-1);}return(NumEEGChannels);}ui1*FindHeaderStart(ui1*mdata){si1String[4196],Line[4196],*HeaderStart;ui1*dp;dp=mdata;while(sscanf((si1*)dp,"%s",String)==1){HeaderStart=(si1*)strstr(String,HEADER_BEGIN_LABEL);if(HeaderStart!=NULL){return(dp+(HeaderStart-String));}sscanfLine(dp,Line);dp+=strlen(Line);}fprintf(MyStdErr,"Can'tfindBPFHeaderbeginlabel:%s\n",HEADER_BEGIN_LABEL);return(NULL);}ui1*FindHeaderEnd(ui1*mdata){si1String[4196],Line[4196];ui1*dp;dp=mdata;while(sscanfLine((si1*)dp,Line)!=NULL){dp=(ui1*)strstr((si1*)dp,Line);dp+=strlen(Line);sscanf(Line,"%s",String);if(strstr(String,HEADER_END_LABEL)!=NULL){return(dp);}}fprintf(MyStdErr,"Can'tfindBPFHeaderendlabel:%s\n",HEADER_END_LABEL);return(NULL);}ui1*FindSection(ui1*dp,ui1*Section){si1Flag[4196];while(sscanf((si1*)dp,"%s",Flag)!=EOF){dp=(ui1*)strstr((si1*)dp,Flag);dp+=strlen(Flag);if(Comment((si1*)dp,Flag))continue;if(!strcmp(Flag,SECTION_BEGIN_LABEL)){sscanf((si1*)dp,"%s",Flag);dp=(ui1*)strstr((si1*)dp,Flag);dp+=strlen(Flag);if(!strcmp(Flag,(si1*)Section))return(dp);}}returnNULL;}si4FindKeyWord(si1*dp,si1*KeyWord,si1*KeyWordString,si1*Encoding){si4SectionEnd(),n_chars;while(sscanf(dp,"%s",KeyWordString)!=EOF){dp=(si1*)strstr(dp,KeyWordString);dp+=strlen(KeyWordString);if(Comment(dp,KeyWordString))continue;if(SectionEnd(KeyWordString))break;if(strstr(KeyWordString,KeyWord)!=NULL){n_chars=0;while(*(dp-n_chars)!='.'){if(*(dp-n_chars)=='('){dp-=n_chars;break;}n_chars++;}(void)sscanfLine(dp,Encoding);return(1);}}return0;}ui1*FindSectionEnd(ui1*dp){si1Line[4196],String[4196];while(sscanfLine(dp,Line)!=EOF){dp=(ui1*)strstr((si1*)dp,Line);dp+=strlen(Line);sscanf(Line,"%s",String);if(SectionEnd(String)){return(dp);}}return(NULL);}si4Comment(ui1*dp,si1*String){si1Line[4196];if(!strcmp(String,COMMENT)){sscanfLine(dp,Line);dp+=strlen(Line);return(1);}elsereturn(0);}si4SectionEnd(si1*String){if(!strcmp(String,SECTION_END_LABEL))return(1);return(0);}si4GetType(si1*KeyWord){si1*TypeString;si4Type=-1;TypeString=(si1*)strchr(KeyWord,TYPE_PREFIX);if(TypeString==NULL)return(-1);sscanf(TypeString+1,"%d",&Type);return(Type);}si4GetBinaryEncoding(si1*Encoding,si1*P){staticsi1String[4196],*TerminateString,*Line;if((Line=(si1*)strstr(Encoding,BINARY_STARTING_MARK))==NULL){fprintf(MyStdErr,"a('muststartbinaryencodings.\n");return(0);}Line+=strlen(BINARY_STARTING_MARK);;sscanf(Line,"%c",P);if(P==NULL){fprintf(MyStdErr,"Can'treadBinarycode.\n");return(0);}return(1);}si4GetASCIIEncoding(si1*Encoding,si1***P){si4n;staticsi1String[4196],*TerminateString,*Line,**Parameters;Parameters=(si1**)calloc(MAX_NUMBER_BPF_FORMAT_PARAMETERS,sizeof(si1*));if(Parameters==NULL){fprintf(MyStdErr,"\nCan'tallocateParameters\n");return(0);}*P=Parameters;if((Line=(si1*)strstr(Encoding,ASCII_STARTING_MARK))==NULL){fprintf(MyStdErr,"a'('muststartASCIIencodings.Found:%s\n",Encoding);return(0);}Line+=strlen(ASCII_STARTING_MARK);;if(sscanf(Line,"%s",String)!=1){fprintf(MyStdErr,"NoASCIIstringtodecode\n");return(0);}Parameters[0]=(si1*)calloc(strlen(String+1),sizeof(si1));strcpy(Parameters[0],String);if((TerminateString=(si1*)strstr(Parameters[0],ASCII_TERMINATING_MARK))!=NULL){*TerminateString='\0';return(1);}n=1;Line+=(strlen(String)+1);while((*Line=='')||(*Line=='\t')){Line++;}while(sscanf(Line,"%s",String)!=EOF){if(!strcmp(String,")"))return(n);Parameters[n]=(si1*)calloc(strlen(String)+1,sizeof(si1));strcpy(Parameters[n],String);if((TerminateString=(si1*)strchr(Parameters[n],')'))!=NULL){*TerminateString='\0';return(++n);}Line+=(strlen(String)+1);while((*Line=='')||(*Line=='\t')){Line++;}n++;if(n==MAX_NUMBER_BPF_FORMAT_PARAMETERS){fprintf(MyStdErr,"ToomanyParametersinEncodingof:\t");return(0);}}return(n);}ui1VerifyRecordFormat(ui1*RecordTypes,ui4*RecordSizes,ui1*SectionStart,si1*id,si1*RecordFormat,ui1RecType){ui1*dp;si1KeyWordString[4196],Encoding[4196];si4Type;dp=SectionStart;if(!FindKeyWord((si1*)dp,id,KeyWordString,Encoding)){fprintf(MyStdErr,"\nCan'tfindkeyWord(%s).\nWrongFileFormat.\n",id);return0;}Type=GetType(KeyWordString);switch(Type){case-1:fprintf(MyStdErr,"KeyWord.integerformatnotrespectedin:%s\nWrongFileFormat.\n",KeyWordString);return0;case0:fprintf(MyStdErr,"%s\nWrongFileFormat.\n",id);return0;caseRECORD_ID_ENCODING:if(!GetBinaryEncoding(Encoding,(si1*)RecordTypes+RecType)){fprintf(MyStdErr,"\nCan'tgetRECORDIDfromheader.\n");return0;}if(RecordTypes[RecType]!=RecType){fprintf(MyStdErr,"\nRecordtype(%c)doesnotmatchlineintheheader.\n",RecType);return(0);}break;default:fprintf(MyStdErr,"Recordid(%s)mustbeBinaryencoded\nWrongFileFormat.\n",Type,KeyWordString);return(0);}dp=SectionStart;if(!FindKeyWord((si1*)dp,RecordFormat,KeyWordString,Encoding)){fprintf(MyStdErr,"\nCan'tfindkeyWord(%s).\nWrongFileFormat.\n",RecordFormat);return0;}RecordSizes[RecType]=(ui4)GetType(KeyWordString);return(1);}si4GetRecordTypesUsed(ui4*RecordTypeNumbers,si1*SectionStart,ui4*BPFEEGChannels){ui4GetNumberOfChannels(),GetIfPositions();si1*dp;ui4i,n;si4NumEEGChannels;si4GetEEGChannelList();for(i=0;i<MAX_BPF_RECORD_TYPES;i++)RecordTypeNumbers[i]=0;n=0;dp=SectionStart;n+=GetNumberOfChannels(RecordTypeNumbers,dp,NUMBER_OF_EEG_CHANNELS,EEG_BPF_REC_TYPE);if(n){NumEEGChannels=GetEEGChannelList(BPFEEGChannels,dp);}elseBPFEEGChannels=NULL;n+=GetNumberOfChannels(RecordTypeNumbers,dp,NUMBER_OF_SINGLE_CHANNELS,SINGLE_BPF_REC_TYPE);n+=GetNumberOfChannels(RecordTypeNumbers,dp,NUMBER_OF_STEREO_CHANNELS,STEREO_BPF_REC_TYPE);n+=GetNumberOfChannels(RecordTypeNumbers,dp,NUMBER_OF_TETRODE_CHANNELS,TETRODE_BPF_REC_TYPE);if(!n){fprintf(MyStdErr,"\nNoindicationinheaderthatthereareelectrophysiologicaldata.\nWrongFileFormat.\n");return(NumEEGChannels);}(void)GetNumberOfChannels(RecordTypeNumbers,dp,NUMBER_OF_SYNC_CHANNELS,SYNC_BPF_REC_TYPE);(void)GetIfPositions(RecordTypeNumbers,dp,ROOM_POSITIONS,ROOM_POSITION_BPF_REC_TYPE);(void)GetIfPositions(RecordTypeNumbers,dp,ARENA_POSITIONS,ARENA_POSITION_BPF_REC_TYPE);return(NumEEGChannels);}si4GetEEGChannelList(ui4*BPFEEGChannels,si1*SectionStart){ui1*dp;si1KeyWordString[4196],Encoding[4196],**Parameters;si4NumberOfParameters,Type,i;dp=(ui1*)SectionStart;if(!FindKeyWord((si1*)dp,LIST_OF_EEG_CHANNELS,KeyWordString,Encoding)){fprintf(MyStdErr,"\nCan'tfindkeyWord(%s).\n",LIST_OF_EEG_CHANNELS);return-1;}Type=GetType(KeyWordString);switch(Type){case-1:fprintf(MyStdErr,"KeyWord.integerformatnotrespectedin:%s\nWrongFileFormat.\n",KeyWordString);return-1;case0:NumberOfParameters=GetASCIIEncoding(Encoding,&Parameters);if(NumberOfParameters){for(i=0;i<NumberOfParameters;i++){BPFEEGChannels[i]=atoi(Parameters[i])-1;}}returnNumberOfParameters;default:fprintf(MyStdErr,"%smustbeASCIIencoded\nWrongFileFormat.\n",KeyWordString);return0;}}ui4GetNumberOfChannels(BPFRecordTypeNumbers,SectionStart,KeyWord,RecType)ui4*BPFRecordTypeNumbers;ui1*SectionStart;si1*KeyWord;ui1RecType;{ui1*dp;si1KeyWordString[4196],Encoding[4196],**Parameters;si4Type,NumberOfParameters;dp=SectionStart;if(!FindKeyWord((si1*)dp,KeyWord,KeyWordString,Encoding)){fprintf(MyStdErr,"\nCan'tfindkeyWord(%s).\n",KeyWord);return(-1);}Type=GetType(KeyWordString);switch(Type){case-1:fprintf(MyStdErr,"KeyWord.integerformatnotrespectedin:%s\nWrongFileFormat.\n",KeyWordString);return(0);case0:NumberOfParameters=GetASCIIEncoding(Encoding,&Parameters);if(NumberOfParameters!=1){fprintf(MyStdErr,"(%s).\nWrongFileFormat.\n",KeyWord);return0;}sscanf(Parameters[0],"%d",&(BPFRecordTypeNumbers[RecType]));return(1);default:fprintf(MyStdErr,"%smustbeASCIIencoded\nWrongFileFormat.\n",KeyWord);return(0);}}ui4GetIfPositions(BPFRecordTypeNumbers,SectionStart,KeyWord,RecType)ui4*BPFRecordTypeNumbers;ui1*SectionStart;si1*KeyWord;ui1RecType;{ui1*dp;si1KeyWordString[4196],Encoding[4196],**Parameters;si4Type,NumberOfParameters;dp=SectionStart;if(!FindKeyWord((si1*)dp,KeyWord,KeyWordString,Encoding)){BPFRecordTypeNumbers[RecType]=0;return1;}Type=GetType(KeyWordString);switch(Type){case-1:fprintf(MyStdErr,"KeyWord.integerformatnotrespectedin:%s\nWrongFileFormat.\n",KeyWordString);return(0);case0:NumberOfParameters=GetASCIIEncoding(Encoding,&Parameters);if(NumberOfParameters!=1){fprintf(MyStdErr,"(%s).\nWrongFileFormat.\n",KeyWord);return0;}sscanf(Parameters[0],"%d",&(BPFRecordTypeNumbers[RecType]));return(1);default:fprintf(MyStdErr,"%smustbeASCIIencoded\nWrongFileFormat.\n",KeyWord);return(0);}}intGetGainsList(si2*Gains,ui1*SectionStart){ui1*dp;si1KeyWordString[4196],Encoding[4196],**Parameters;si4NumberOfParameters,Type,i;dp=SectionStart;if(!FindKeyWord((si1*)dp,LIST_OF_GAINS,KeyWordString,Encoding)){fprintf(MyStdErr,"\nCan'tfindkeyWord(%s).\n",LIST_OF_GAINS);return1;}Type=GetType(KeyWordString);switch(Type){case-1:fprintf(MyStdErr,"KeyWord.integerformatnotrespectedin:%s\nWrongFileFormat.\n",KeyWordString);return1;case0:NumberOfParameters=GetASCIIEncoding(Encoding,&Parameters);if(NumberOfParameters){if(NumberOfParameters>MAX_NUMBER_OF_BPF_CHANNELS){fprintf(MyStdErr,"GetGainsListERRA:NumberOfParameters=%d>MAX_NUMBER_OF_BPF_CHANNELS=%d!!!\n",NumberOfParameters,MAX_NUMBER_OF_BPF_CHANNELS);return0;}for(i=0;i<NumberOfParameters;i++){Gains[i]=atoi(Parameters[i]);}}return1;default:fprintf(MyStdErr,"%smustbeASCIIencoded\nWrongFileFormat.\n",KeyWordString);return1;}return1;}voidbpf_instruct(){printf("\n\nCallwithabrainpotentialfile(.bpf)formatfileinthepwd.\n");printf("OutputstheEEGwaveformforeachchannelintheBPFfiletoa.wfmfileinthepwd.\n");printf("TheoutputvoltageisinmVunits.\n");printf("Options:\n");printf("-e#givethenumberofsamplesintheEEGrecord.Defaultis%d\n",NUMBER_OF_BPF_EEG_SAMPLES);printf("-g#givethefactorbywhichtomultiplythevoltagessoasadjustthegainoftherecordeddata.Thedefaultis1.0\n");printf("\t\tUsethisoptionforexampleifthereisexternalgainthattherecordingsystemdoesnotregisterintheBPFfileheader.\n");printf("\t\tOneexampleisifanexternalamplifierwasusedandsetto1000x.Inthiscaseyouwillneedtosetoptiongto0.001.\n");printf("\t\tAnotherexampleisthewirelessDTrecordingsystemwhichhasahiddengainof2.08\n");}#definePREAMP_GAIN100.0#defineDSP_GAIN20.0intoptind;char*optarg;ENDVERBATIMVERBATIMinlineui4reverse_ui4(ui1*b){ui1*f;staticui4u;f=(ui1*)&u;*f++=*b++;*f++=*b++;*f++=*b++;*f=*b;return(u);}inlineui2reverse_ui2(ui1*b){ui1*f;staticui2u;f=(ui1*)&u;*f++=*b++;*f=*b;return(u);}inlinesi2reverse_si2(ui1*b){ui1*f;staticsi2u;f=(ui1*)&u;*f++=*b++;*f=*b;return(u);}staticdoublereadbpfunits(void*vv){Object*pList;void*vw;intiMaxCols,iSz,npvec,ncvec,vlen[VRRY],ix,ix2,waveformflag;char*fname;double*pvec,*cvec,retval,cl,pr,*vvo[VRRY];FILE*fp;si1d,type,dp[MAX_BPF_REC_SIZE],*hp;si4ReadBPFHeader();ui4data_offset,RecordSizes[256];ui1dummy[5],key;si1line[256],string[256];ui1probe,clust,x,y;ui2ang,reverse_ui2();si2reverse_si2();ui4i,j,time_stamp,reverse_ui4();si2*ADCValue1,*ADCValue2,Gains[MAX_NUMBER_OF_BPF_CHANNELS];si4channel,BytesPerChannel,TetrodeBPFRecSize,ChannelsPerTetrode,SamplesPerWaveform;sf8ddt,volts1,volts2,energy;si4AcquisitionSystem;ui4EEGChList[MAX_NUMBER_OF_BPF_CHANNELS];ui4BPFRecordTypeNumbers[256];ChannelsPerTetrode=4;SamplesPerWaveform=NUMBER_OF_BPF_TETRODE_SAMPLES;npvec=vector_instance_px(vv,&pvec);fname=gargstr(1);pList=*hoc_objgetarg(2);ncvec=vector_arg_px(3,&cvec);waveformflag=(ifarg(4)?(int)*getarg(4):1);iMaxCols=ivoc_list_count(pList);if(iMaxCols>VRRY){printf("readbpfunits;CanonlyhandleVRRY==%dvecs\n",VRRY);hxe();}retval=0.;if(npvec!=ncvec){printf("pv.readbpfunits(file,outvecl,cv)ERRA:needprobe#sinpv,clust#sincv%d%d\n",\npvec,ncvec);hxe();}if(waveformflag){if(npvec*ChannelsPerTetrode!=iMaxCols){printf("readbpfunitsERRA0:waveformoutveclistshouldbesize%d*%d(#chans),not%d\n",\ChannelsPerTetrode,npvec,iMaxCols);hxe();}}elseif(npvec!=iMaxCols)if(npvec*ChannelsPerTetrode!=iMaxCols){printf("readbpfunitsERRA0:outveclistshouldbesize%d(#chans),not%d\n",\npvec,iMaxCols);hxe();}for(i=0;i<iMaxCols;i++){vlen[i]=0;if(i==0)iSz=list_vector_px3(pList,i,&vvo[i],&vw);else{if((j=list_vector_px(pList,i,&vvo[i]))!=iSz){fprintf(stderr,"readbpfunitsERRF:differentsizevectors%d%d%d\n",i,j,iSz);hxe();}}}RecordSizes[EEG_BPF_REC_TYPE]=EEG_BPF_REC_SIZE;RecordSizes[SINGLE_BPF_REC_TYPE]=SINGLE_BPF_REC_SIZE;RecordSizes[STEREO_BPF_REC_TYPE]=STEREO_BPF_REC_SIZE;RecordSizes[TETRODE_BPF_REC_TYPE]=TETRODE_BPF_REC_SIZE;RecordSizes[SYNC_BPF_REC_TYPE]=SYNC_BPF_REC_SIZE;RecordSizes[ROOM_POSITION_BPF_REC_TYPE]=ROOM_POSITION_BPF_REC_SIZE;RecordSizes[ARENA_POSITION_BPF_REC_TYPE]=ARENA_POSITION_BPF_REC_SIZE;RecordSizes[KEY_EVENT_BPF_REC_TYPE]=KEY_EVENT_BPF_REC_SIZE;RecordSizes[INPUT_EVENT_BPF_REC_TYPE]=INPUT_EVENT_BPF_REC_SIZE;RecordSizes[OUTPUT_EVENT_BPF_REC_TYPE]=OUTPUT_EVENT_BPF_REC_SIZE;fp=fopen(fname,"r");if(fp==NULL){printf("readbpfunitsERRZ:can'topen%sforreading!\n",fname);gotodofree;}while(fgets(line,256,fp)!=NULL){sscanf(line,"%s",string);if(!strcmp(string,HEADER_END_LABEL)){data_offset=ftell(fp);break;}}hp=(si1*)calloc(data_offset,sizeof(si1));if(hp==NULL){fprintf(stderr,"readbpfunitsERRM:callocfailed\n");gotodofree;}rewind(fp);if(fread(hp,sizeof(ui1),data_offset,fp)!=data_offset){fprintf(stderr,"readbpfunitsERRN:freadheaderfailed\n");gotodofree;}fflush(stdout);ReadBPFHeader(hp,RecordSizes,Gains,&AcquisitionSystem,EEGChList,BPFRecordTypeNumbers);BytesPerChannel=2*SamplesPerWaveform;ddt=1.0/(sf8)SamplesPerWaveform;while(1){fseek(fp,data_offset,0);if(fread(((void*)dp),sizeof(ui1),(size_t)1,fp)==EOF)break;type=(si1)*dp;data_offset+=RecordSizes[type];if(fread((void*)(dp+1),sizeof(ui1),(size_t)RecordSizes[type]-1,fp)!=(RecordSizes[type]-1)){fprintf(stderr,"Couldn'treadcompleterecordoftype%c\n",type);gotoresize;}time_stamp=reverse_ui4(dp+1);switch(type){caseEEG_BPF_REC_TYPE:break;caseSYNC_BPF_REC_TYPE:break;caseINPUT_EVENT_BPF_REC_TYPE:break;caseOUTPUT_EVENT_BPF_REC_TYPE:break;caseKEY_EVENT_BPF_REC_TYPE:key=(si1)*(dp+BPF_KEY_EVENT_REC_OFFSET);break;caseROOM_POSITION_BPF_REC_TYPE:caseARENA_POSITION_BPF_REC_TYPE:break;caseSINGLE_BPF_REC_TYPE:caseSTEREO_BPF_REC_TYPE:caseTETRODE_BPF_REC_TYPE:probe=*(dp+BPF_RECORD_PROBE_OFFSET);clust=*(dp+BPF_SPK_REC_CLUST_OFFSET);pr=(double)probe;cl=(double)clust;for(i=0.;i<npvec;i++)if(pvec[i]==pr&&cvec[i]==cl)break;if((ix=i)<npvec){if(!waveformflag){if(vlen[ix]>=iSz){iSz=((iSz==0)?1e4:iSz*2);for(i=0;i<iMaxCols;i++)vvo[i]=list_vector_resize(pList,i,iSz);}vvo[ix][vlen[ix]]=(double)time_stamp/10.0;vlen[ix]++;}else{ix*=ChannelsPerTetrode;if(vlen[ix]+SamplesPerWaveform+10>=iSz){iSz=((iSz==0)?1e4:iSz*2)+SamplesPerWaveform+10;for(i=0;i<iMaxCols;i++)vvo[i]=list_vector_resize(pList,i,iSz);}for(channel=0;channel<ChannelsPerTetrode;channel++){ix2=ix+channel;for(j=0;j<SamplesPerWaveform;j++){ADCValue2=(si2*)(dp+7+(2*j)+(channel*BytesPerChannel));*ADCValue2=(si2)reverse_si2(ADCValue2);volts2=10.0*(sf8)*ADCValue2/(sf8)SHRT_MAX/(sf8)Gains[channel];vvo[ix2][vlen[ix2]]=volts2;vlen[ix2]++;}}}}break;default:printf("%cUNKNOWNRECORDTYPE",type);fflush(stdout);break;}}resize:for(i=0;i<iMaxCols;i++)list_vector_resize(pList,i,vlen[i]);retval=1.0;dofree:if(VERBOSE>1)printf("readbpfunits:freeingmemory\n");if(fp)fclose(fp);if(hp)free(hp);returnretval;}voidSetBPFRecSizes(ui4RecordSizes[256]){RecordSizes[EEG_BPF_REC_TYPE]=EEG_BPF_REC_SIZE;RecordSizes[SINGLE_BPF_REC_TYPE]=SINGLE_BPF_REC_SIZE;RecordSizes[STEREO_BPF_REC_TYPE]=STEREO_BPF_REC_SIZE;RecordSizes[TETRODE_BPF_REC_TYPE]=TETRODE_BPF_REC_SIZE;RecordSizes[SYNC_BPF_REC_TYPE]=SYNC_BPF_REC_SIZE;RecordSizes[ROOM_POSITION_BPF_REC_TYPE]=ROOM_POSITION_BPF_REC_SIZE;RecordSizes[ARENA_POSITION_BPF_REC_TYPE]=ARENA_POSITION_BPF_REC_SIZE;RecordSizes[KEY_EVENT_BPF_REC_TYPE]=KEY_EVENT_BPF_REC_SIZE;RecordSizes[INPUT_EVENT_BPF_REC_TYPE]=INPUT_EVENT_BPF_REC_SIZE;RecordSizes[OUTPUT_EVENT_BPF_REC_TYPE]=OUTPUT_EVENT_BPF_REC_SIZE;}staticdoublerdbpfu(void*vv){Object*pList;void*vw;intiMaxCols,iSz,novec,cnt,vpr;char*fname;double*ovec,retval,*vvo[4];FILE*fp;si1d,type,dp[MAX_BPF_REC_SIZE],*hp;si4ReadBPFHeader();ui4data_offset,RecordSizes[256],filebytes;ui1dummy[5],key;si1line[256],string[256];ui1probe,clust,x,y;ui2ang,reverse_ui2();si2reverse_si2();ui4i,j,time_stamp,reverse_ui4();si2*ADCValue1,*ADCValue2,Gains[MAX_NUMBER_OF_BPF_CHANNELS],*wavep;si4chan,BytesPerChannel,TetrodeBPFRecSize,ChannelsPerTetrode,SamplesPerWaveform;sf8ddt,volts1,volts2,energy;si4AcquisitionSystem;ui4EEGChList[MAX_NUMBER_OF_BPF_CHANNELS];ui4BPFRecordTypeNumbers[256];ChannelsPerTetrode=4;SamplesPerWaveform=NUMBER_OF_BPF_TETRODE_SAMPLES;novec=vector_instance_px(vv,&ovec);fname=gargstr(1);pList=*hoc_objgetarg(2);iMaxCols=ivoc_list_count(pList);if(iMaxCols!=4){printf("rdbpfu:NQSveclistshouldbesize4\n");hxe();}retval=0.;for(i=0;i<iMaxCols;i++){if(i==0)iSz=list_vector_px3(pList,i,&vvo[i],&vw);else{if((j=list_vector_px3(pList,i,&vvo[i],&vw))!=iSz){fprintf(stderr,"rdbpfuERRF:differentsizevectors%d%d%d\n",i,j,iSz);hxe();}}}SetBPFRecSizes(RecordSizes);if((fp=fopen(fname,"r"))==NULL){printf("rdbpfuERRZ:can'topen%sforreading!\n",fname);gotodofree;}while(fgets(line,256,fp)!=NULL){sscanf(line,"%s",string);if(!strcmp(string,HEADER_END_LABEL)){data_offset=ftell(fp);break;}}hp=(si1*)calloc(data_offset,sizeof(si1));if(hp==NULL){fprintf(stderr,"rdbpfuERRM:callocfailed\n");gotodofree;}fseek(fp,0,SEEK_END);filebytes=ftell(fp);if(VERBOSE>1)printf("filebytes=%d\n",filebytes);rewind(fp);if(fread(hp,sizeof(ui1),data_offset,fp)!=data_offset){fprintf(stderr,"rdbpfuERRN:freadheaderfailed\n");gotodofree;}fflush(stdout);ReadBPFHeader(hp,RecordSizes,Gains,&AcquisitionSystem,EEGChList,BPFRecordTypeNumbers);BytesPerChannel=2*SamplesPerWaveform;ddt=1.0/(sf8)SamplesPerWaveform;cnt=vpr=0;while(1){fseek(fp,data_offset,0);if(fread(((void*)dp),sizeof(ui1),(size_t)1,fp)==EOF)break;type=(si1)*dp;data_offset+=RecordSizes[type];if(data_offset>=filebytes){if(VERBOSE>1)printf("data_offset=%d>=filebytes=%d\n",data_offset,filebytes);break;}if(fread((void*)(dp+1),sizeof(ui1),(size_t)RecordSizes[type]-1,fp)!=(RecordSizes[type]-1)){fprintf(stderr,"rdbpfu:Couldn'treadcompleterecordoftype%c,@offset=%d\n",type,data_offset);gotoresize;}switch(type){caseINPUT_EVENT_BPF_REC_TYPE:caseOUTPUT_EVENT_BPF_REC_TYPE:caseEEG_BPF_REC_TYPE:caseSYNC_BPF_REC_TYPE:caseROOM_POSITION_BPF_REC_TYPE:caseARENA_POSITION_BPF_REC_TYPE:caseKEY_EVENT_BPF_REC_TYPE:break;caseSINGLE_BPF_REC_TYPE:caseSTEREO_BPF_REC_TYPE:caseTETRODE_BPF_REC_TYPE:time_stamp=reverse_ui4(dp+1);probe=*(dp+BPF_RECORD_PROBE_OFFSET);clust=*(dp+BPF_SPK_REC_CLUST_OFFSET);if(cnt>=iSz){iSz=((iSz==0)?1e4:iSz*2);for(i=0;i<iMaxCols;i++)vvo[i]=list_vector_resize(pList,i,iSz);}vvo[0][cnt]=(double)time_stamp/10.0;vvo[1][cnt]=(double)probe;vvo[2][cnt]=(double)clust;vvo[3][cnt]=(double)vpr;cnt++;if(vpr+ChannelsPerTetrode*SamplesPerWaveform>=novec){novec=(novec==0?10000:10*novec);ovec=vector_newsize(vv,novec);}wavep=(si2*)(dp+7);for(chan=0;chan<ChannelsPerTetrode;chan++)for(j=0;j<SamplesPerWaveform;j++,wavep++){ovec[vpr++]=(double)10.0*wavep[0]/SHRT_MAX;}break;default:printf("%cUNKNOWNRECORDTYPE",type);fflush(stdout);break;}}resize:if(VERBOSE>1)printf("vpr=%d,novec=%d\n",vpr,novec);for(i=0;i<iMaxCols;i++)list_vector_resize(pList,i,cnt);vector_resize(vv,vpr);retval=1.0;dofree:if(VERBOSE>1)printf("rdbpfu:freeingmemory\n");if(fp)fclose(fp);if(hp)free(hp);returnretval;}staticdoublereadbpfeeg(void*vv){Object*pList=0;intiMaxCols=0;double**vvo=0;doubleretval=0.0;FILE*fp=0;si1file[4196],*c;si1type,dp[MAX_BPF_REC_SIZE],*hp=0;si4d,channel,EEGBPFRecSize,EEGChannels=NUMBER_OF_BPF_EEG_CHANNELS,SamplesPerRecord=NUMBER_OF_BPF_EEG_SAMPLES;si4BytesPerChannel;ui4data_offset,RecordSizes[256];si1line[4096],string[4096];ui1probe,clust,x,y;ui2ang;ui4i,time_stamp;si2*ADCValue,Gains[MAX_NUMBER_OF_BPF_CHANNELS];sf4volts,AdjustGain=1.0;si4AcquisitionSystem;ui4EEGChList[MAX_NUMBER_OF_BPF_CHANNELS];ui4BPFRecordTypeNumbers[256];char*fname;double*pThisV=0;intiThisVSz=0,iSz=0,iOffsetStart=0,iOffsetCur=0;iThisVSz=vector_instance_px(vv,&pThisV);RecordSizes[EEG_BPF_REC_TYPE]=EEG_BPF_REC_SIZE;RecordSizes[SINGLE_BPF_REC_TYPE]=SINGLE_BPF_REC_SIZE;RecordSizes[STEREO_BPF_REC_TYPE]=STEREO_BPF_REC_SIZE;RecordSizes[TETRODE_BPF_REC_TYPE]=TETRODE_BPF_REC_SIZE;RecordSizes[SYNC_BPF_REC_TYPE]=SYNC_BPF_REC_SIZE;RecordSizes[ROOM_POSITION_BPF_REC_TYPE]=ROOM_POSITION_BPF_REC_SIZE;RecordSizes[ARENA_POSITION_BPF_REC_TYPE]=ARENA_POSITION_BPF_REC_SIZE;RecordSizes[INPUT_EVENT_BPF_REC_TYPE]=INPUT_EVENT_BPF_REC_SIZE;RecordSizes[OUTPUT_EVENT_BPF_REC_TYPE]=OUTPUT_EVENT_BPF_REC_SIZE;fname=gargstr(1);pList=*hoc_objgetarg(2);iMaxCols=ivoc_list_count(pList);if(ifarg(3))SamplesPerRecord=*getarg(3);if(ifarg(4))AdjustGain=(sf4)*getarg(4);fp=fopen(fname,"r");if(fp==NULL){printf("readbpfeegERRZ:can'topen%sforreading!\n",fname);gotodofree;}while(get_line(fp,line,4096)!=NULL){sscanf(line,"%s",string);if(!strcmp(string,HEADER_END_LABEL)){data_offset=ftell(fp);break;}}hp=(si1*)calloc(data_offset,sizeof(si1));if(hp==NULL){fprintf(stderr,"readbpfeegERRM:callocfailed\n");gotodofree;}rewind(fp);if(fread(hp,sizeof(ui1),data_offset,fp)!=data_offset){fprintf(stderr,"readbpfeegERRN:freadheaderfailed\n");gotodofree;}fflush(stdout);EEGChannels=ReadBPFHeader(hp,RecordSizes,Gains,&AcquisitionSystem,EEGChList,BPFRecordTypeNumbers);if(EEGChannels<1){printf("readbpfeegERRB:NoEEGChannels.\n");gotodofree;}elseif(VERBOSE)printf("readbpfeeg:EEGChannels=%d\n",EEGChannels);EEGBPFRecSize=EEG_BPF_REC_INFO_SIZE+(SamplesPerRecord*2*EEGChannels);if(iMaxCols<EEGChannels+1){fprintf(stderr,"readbpfeegERRD:needEEGChannels+1=%dforeegdata+time,List.count=%d!!\n",EEGChannels+1,iMaxCols);gotodofree;}elseif(VERBOSE)printf("readbpfeeg:iMaxCols=%d\n",iMaxCols);if(iThisVSz<EEGChannels){printf("readbpfeegERRG:Thisvectorsz%d<EEGChannels%d!\n",iThisVSz,EEGChannels);gotodofree;}elseif(VERBOSE)printf("readbpfeeg:iThisVSz=%d\n",iThisVSz);vvo=(double**)malloc(iMaxCols*sizeof(double*));if(!vvo){fprintf(stderr,"readbpfeegERRE:couldn'tallocmemforvvo!\n");gotodofree;}for(i=0;i<EEGChannels;i++){pThisV[i]=1+EEGChList[i];if((iSz=list_vector_px(pList,i,&vvo[i]))<SamplesPerRecord){fprintf(stderr,"readbpfeegERRF:listvectorssize%d<BPFSamplesPerRecord%d!\n",iSz,SamplesPerRecord);gotodofree;}elseif(VERBOSE>1)printf("readbpfeeg:iSz%d=%d\n",i,iSz);}if((iSz=list_vector_px(pList,i,&vvo[i]))<SamplesPerRecord){fprintf(stderr,"readbpfeegERRT:timeVectorinvalid!\n");gotodofree;}BytesPerChannel=2*SamplesPerRecord;if(VERBOSE>1)printf("readbpfeeg:BytesPerChannel=%dSamplesPerRecord=%d\n",BytesPerChannel,SamplesPerRecord);i=0;clock_tstartt,endt;startt=clock();if(AcquisitionSystem==ACX){while(1){if(fread(((void*)dp),sizeof(ui1),(size_t)1,fp)==EOF)break;type=(si1)*dp;if(fread((void*)(dp+1),sizeof(ui1),(size_t)RecordSizes[type]-1,fp)!=(RecordSizes[type]-1))break;if(type!=EEG_BPF_REC_TYPE)continue;for(channel=0;channel<EEGChannels;channel++){iOffsetCur=iOffsetStart;for(i=0;i<SamplesPerRecord;i++,iOffsetCur++){ADCValue=(si2*)(dp+5+(2*i)+(channel*BytesPerChannel));*ADCValue=(si2)reverse_si2(ADCValue);vvo[channel][iOffsetCur]=AdjustGain*10.*(sf4)*ADCValue/(sf4)SHRT_MAX/(sf4)Gains[EEGChList[channel]]*1e3;}}iOffsetStart+=SamplesPerRecord;}}elseif(AcquisitionSystem==AXONA){while(1){if(fread(((void*)dp),sizeof(ui1),(size_t)1,fp)==EOF)break;type=(si1)*dp;if(fread((void*)(dp+1),sizeof(ui1),(size_t)RecordSizes[type]-1,fp)!=(RecordSizes[type]-1))break;if(type!=EEG_BPF_REC_TYPE)continue;for(channel=0;channel<EEGChannels;channel++){iOffsetCur=iOffsetStart;for(i=0;i<SamplesPerRecord;i++,iOffsetCur++){ADCValue=(si2*)(dp+5+(2*i)+(channel*BytesPerChannel));*ADCValue=(si2)reverse_si2(ADCValue);vvo[channel][iOffsetCur]=1000.0*(AdjustGain*(sf4)*ADCValue/(sf4)SHRT_MAX);}}iOffsetStart+=SamplesPerRecord;}}intiT=EEGChannels,iLim=iOffsetStart;doubletcur=0.0,tinc=(1/2e3)/60.0;for(i=0;i<iLim;i++){vvo[iT][i]=tcur;tcur+=tinc;}endt=clock();printf("mainlooptime=%gms\n",1000.0*((double)(endt-startt))/CLOCKS_PER_SEC);if(VERBOSE)printf("offset=%d\n",iOffsetStart);retval=1.0;dofree:returnretval;if(VERBOSE>1)printf("readbpfeeg:freeingmemory\n");if(fp)fclose(fp);if(vvo)free(vvo);if(hp)free(hp);returnretval;}ENDVERBATIMFUNCTIONbpfeegchlab(){VERBATIMdoubledRet;dRet=-1.0;FILE*fp=0;char*fname=0,**plabs=0,line[4096],string[4096],*pch;fname=gargstr(1);fp=fopen(fname,"r");if(!fp){printf("bpfeegchlabERRA:couldn'topen%sforreading!\n",fname);gotoCHLCLEANUP;}intiChans=(int)*getarg(2),idx,jdx,iLine=0,iMaxLine=100,iLabLen=strlen(CHANNEL_LABEL),iCH=0;if(iChans<1){printf("bpfeegchlabERRB:invalidnumberofchannels:%d!\n",iChans);gotoCHLCLEANUP;}plabs=(char**)calloc(iChans,sizeof(char*));if(!plabs){printf("bpfeegchlabERRC:outofmemory!\n");gotoCHLCLEANUP;}for(idx=0;idx<iChans;idx++){plabs[idx]=gargstr(idx+3);if(!plabs[idx]){printf("bpfeegchlabERRD:couldn'tgetinputstring%d!\n",idx+3);gotoCHLCLEANUP;}plabs[idx][0]=0;}while(iLine++<iMaxLine&&iCH<iChans&&get_line(fp,line,4096)!=NULL){if(!strncmp(line,CHANNEL_LABEL,iLabLen)){if(VERBOSE)printf("bpfeegchlab:%s\n",line);pch=strchr(line,'\"');if(!pch)continue;pch++;if(!*pch)continue;idx=0;while(*pch&&*pch!='\"')plabs[iCH][idx++]=*pch++;plabs[iCH][idx]=0;if(VERBOSE)printf("bpfeegchlab:label%d=%s\n",iCH,plabs[iCH]);iCH++;}elseif(VERBOSE>1)printf("bpfeegchlab:L%d=%s\n",iLine,line);}dRet=(double)iCH;CHLCLEANUP:if(fp)fclose(fp);if(plabs)free(plabs);returndRet;ENDVERBATIM}FUNCTIONbpfsyncchan(){VERBATIMFILE*fp=0;si1file[4196],*c;si1type,dp[MAX_BPF_REC_SIZE],*hp=0;si4d,channel,EEGBPFRecSize,EEGChannels=NUMBER_OF_BPF_EEG_CHANNELS;ui4data_offset,RecordSizes[256];si1line[4096],string[4096];ui4i;si2Gains[MAX_NUMBER_OF_BPF_CHANNELS];sf4AdjustGain=1.0;si4AcquisitionSystem;ui4EEGChList[MAX_NUMBER_OF_BPF_CHANNELS];ui4BPFRecordTypeNumbers[256];char*fname;RecordSizes[EEG_BPF_REC_TYPE]=EEG_BPF_REC_SIZE;RecordSizes[SINGLE_BPF_REC_TYPE]=SINGLE_BPF_REC_SIZE;RecordSizes[STEREO_BPF_REC_TYPE]=STEREO_BPF_REC_SIZE;RecordSizes[TETRODE_BPF_REC_TYPE]=TETRODE_BPF_REC_SIZE;RecordSizes[SYNC_BPF_REC_TYPE]=SYNC_BPF_REC_SIZE;RecordSizes[ROOM_POSITION_BPF_REC_TYPE]=ROOM_POSITION_BPF_REC_SIZE;RecordSizes[ARENA_POSITION_BPF_REC_TYPE]=ARENA_POSITION_BPF_REC_SIZE;RecordSizes[INPUT_EVENT_BPF_REC_TYPE]=INPUT_EVENT_BPF_REC_SIZE;RecordSizes[OUTPUT_EVENT_BPF_REC_TYPE]=OUTPUT_EVENT_BPF_REC_SIZE;fname=gargstr(1);fp=fopen(fname,"r");if(fp==NULL){printf("bpfsyncchanERRA:Can'topen%sforreading\n",fname);gotodofree;}while(get_line(fp,line,4096)!=NULL){sscanf(line,"%s",string);if(!strcmp(string,HEADER_END_LABEL)){data_offset=ftell(fp);break;}}hp=(si1*)calloc(data_offset,sizeof(si1));if(hp==NULL){fprintf(stderr,"bpfsyncchanERRB:callocfailed\n");gotodofree;}rewind(fp);if(fread(hp,sizeof(ui1),data_offset,fp)!=data_offset){fprintf(stderr,"bpfsyncchanERRC:freadheaderfailed\n");gotodofree;}fflush(stdout);EEGChannels=ReadBPFHeader(hp,RecordSizes,Gains,&AcquisitionSystem,EEGChList,BPFRecordTypeNumbers);if(VERBOSE)printf("bpfsyncchan:SYNCChannels=%d\n",BPFRecordTypeNumbers[SYNC_BPF_REC_TYPE]);dofree:if(VERBOSE>1)printf("bpfsyncchan:freeingmemory\n");if(fp)fclose(fp);if(hp)free(hp);return(double)(BPFRecordTypeNumbers[SYNC_BPF_REC_TYPE]>=0?BPFRecordTypeNumbers[SYNC_BPF_REC_TYPE]:0);ENDVERBATIM}FUNCTIONbpfeegchan(){VERBATIMFILE*fp=0;si1file[4196],*c;si1type,dp[MAX_BPF_REC_SIZE],*hp=0;si4d,channel,EEGBPFRecSize,EEGChannels=NUMBER_OF_BPF_EEG_CHANNELS;ui4data_offset,RecordSizes[256];si1line[4096],string[4096];ui4i;si2Gains[MAX_NUMBER_OF_BPF_CHANNELS];sf4AdjustGain=1.0;si4AcquisitionSystem;ui4EEGChList[MAX_NUMBER_OF_BPF_CHANNELS];ui4BPFRecordTypeNumbers[256];char*fname;RecordSizes[EEG_BPF_REC_TYPE]=EEG_BPF_REC_SIZE;RecordSizes[SINGLE_BPF_REC_TYPE]=SINGLE_BPF_REC_SIZE;RecordSizes[STEREO_BPF_REC_TYPE]=STEREO_BPF_REC_SIZE;RecordSizes[TETRODE_BPF_REC_TYPE]=TETRODE_BPF_REC_SIZE;RecordSizes[SYNC_BPF_REC_TYPE]=SYNC_BPF_REC_SIZE;RecordSizes[ROOM_POSITION_BPF_REC_TYPE]=ROOM_POSITION_BPF_REC_SIZE;RecordSizes[ARENA_POSITION_BPF_REC_TYPE]=ARENA_POSITION_BPF_REC_SIZE;RecordSizes[INPUT_EVENT_BPF_REC_TYPE]=INPUT_EVENT_BPF_REC_SIZE;RecordSizes[OUTPUT_EVENT_BPF_REC_TYPE]=OUTPUT_EVENT_BPF_REC_SIZE;fname=gargstr(1);fp=fopen(fname,"r");if(fp==NULL){printf("bpfeegchanERRA:Can'topen%sforreading\n",fname);gotodofree;}while(get_line(fp,line,4096)!=NULL){sscanf(line,"%s",string);if(!strcmp(string,HEADER_END_LABEL)){data_offset=ftell(fp);break;}}hp=(si1*)calloc(data_offset,sizeof(si1));if(hp==NULL){fprintf(stderr,"bpfeegchanERRB:callocfailed\n");gotodofree;}rewind(fp);if(fread(hp,sizeof(ui1),data_offset,fp)!=data_offset){fprintf(stderr,"bpfeegchanERRC:freadheaderfailed\n");gotodofree;}fflush(stdout);EEGChannels=ReadBPFHeader(hp,RecordSizes,Gains,&AcquisitionSystem,EEGChList,BPFRecordTypeNumbers);if(EEGChannels<1){printf("bpfeegchanERRD:NoEEGChannels.\n");gotodofree;}if(VERBOSE)printf("bpfeegchan:EEGChannels=%d\n",EEGChannels);dofree:if(VERBOSE>1)printf("bpfeegchan:freeingmemory\n");if(fp)fclose(fp);if(hp)free(hp);return(double)EEGChannels;ENDVERBATIM}FUNCTIONbpfeegsamp(){VERBATIMFILE*fp=0;si1file[4196],*c;si1type,dp[MAX_BPF_REC_SIZE],*hp=0;si4d,channel,EEGBPFRecSize,EEGChannels=NUMBER_OF_BPF_EEG_CHANNELS;si4SamplesPerRecord=NUMBER_OF_BPF_EEG_SAMPLES;si4BytesPerChannel;ui4data_offset,RecordSizes[256];si1line[4096],string[4096];ui1probe,clust,x,y;ui2ang;ui4i;si2*ADCValue,Gains[MAX_NUMBER_OF_BPF_CHANNELS];sf4volts,**EEGdata=0,AdjustGain=1.0;si4AcquisitionSystem;ui4EEGChList[MAX_NUMBER_OF_BPF_CHANNELS];ui4BPFRecordTypeNumbers[256];char*fname;intiTotalSamplesPerChannel=0;RecordSizes[EEG_BPF_REC_TYPE]=EEG_BPF_REC_SIZE;RecordSizes[SINGLE_BPF_REC_TYPE]=SINGLE_BPF_REC_SIZE;RecordSizes[STEREO_BPF_REC_TYPE]=STEREO_BPF_REC_SIZE;RecordSizes[TETRODE_BPF_REC_TYPE]=TETRODE_BPF_REC_SIZE;RecordSizes[SYNC_BPF_REC_TYPE]=SYNC_BPF_REC_SIZE;RecordSizes[ROOM_POSITION_BPF_REC_TYPE]=ROOM_POSITION_BPF_REC_SIZE;RecordSizes[ARENA_POSITION_BPF_REC_TYPE]=ARENA_POSITION_BPF_REC_SIZE;RecordSizes[INPUT_EVENT_BPF_REC_TYPE]=INPUT_EVENT_BPF_REC_SIZE;RecordSizes[OUTPUT_EVENT_BPF_REC_TYPE]=OUTPUT_EVENT_BPF_REC_SIZE;fname=gargstr(1);if(ifarg(2))SamplesPerRecord=*getarg(2);fp=fopen(fname,"r");if(fp==NULL){printf("bpfeegsampERRA:Can'topen%sforreading\n",fname);gotodofree;}while(get_line(fp,line,4096)!=NULL){sscanf(line,"%s",string);if(!strcmp(string,HEADER_END_LABEL)){data_offset=ftell(fp);break;}}hp=(si1*)calloc(data_offset,sizeof(si1));if(hp==NULL){fprintf(stderr,"bpfeegsampERRB:callocfailed\n");gotodofree;}rewind(fp);if(fread(hp,sizeof(ui1),data_offset,fp)!=data_offset){fprintf(stderr,"bpfeegsampERRC:freadheaderfailed\n");gotodofree;}fflush(stdout);EEGChannels=ReadBPFHeader(hp,RecordSizes,Gains,&AcquisitionSystem,EEGChList,BPFRecordTypeNumbers);if(EEGChannels<1){printf("bpfeegsampERRD:NoEEGChannels.\n");gotodofree;}if(VERBOSE)printf("bpfeegsamp:EEGChannels=%d\n",EEGChannels);EEGBPFRecSize=EEG_BPF_REC_INFO_SIZE+(SamplesPerRecord*2*EEGChannels);BytesPerChannel=2*SamplesPerRecord;i=0;while(1){if(fread(((void*)dp),sizeof(ui1),(size_t)1,fp)==EOF)break;type=(si1)*dp;data_offset+=RecordSizes[type];if(fread((void*)(dp+1),sizeof(ui1),(size_t)RecordSizes[type]-1,fp)!=(RecordSizes[type]-1))break;if(type==EEG_BPF_REC_TYPE)iTotalSamplesPerChannel+=SamplesPerRecord;}if(VERBOSE)printf("bpfeegsamp:TotalSamplesPerChannel=%d\n",iTotalSamplesPerChannel);dofree:if(VERBOSE>1)printf("bpfeegsamp:freeingmemory\n");if(fp)fclose(fp);if(hp)free(hp);return(double)iTotalSamplesPerChannel;ENDVERBATIM}VERBATIMstaticdoublereadbdat(void*vv){FILE*fp;ListVec*pList;double**pLV,retval;inti,j,iChans,*pLen,iMinSz;short*pbuf;char*fname;retval=0.0;fp=0;pList=0;pbuf=0;fname=gargstr(1);fp=fopen(fname,"rb");if(!fp){printf("readbdatERRA:couldn'topen%sforreading!\n",fname);gotoCLEANBD;}pList=AllocListVec(*hoc_objgetarg(2));if(!pList){printf("readbdatERRB:couldn'tinitializelistvecarg2!\n");gotoCLEANBD;}pLV=pList->pv;pLen=pList->plen;iChans=(int)*getarg(3);if(iChans<1){printf("readbdatERRC:numchannelsmustbe>0!\n",iChans);gotoCLEANBD;}if(pList->isz<iChans){printf("readbdatERRD:ListVecarg2size%d<#ofchannels%d!\n",pList->isz,iChans);gotoCLEANBD;}j=0;pbuf=(short*)malloc(sizeof(short)*iChans);iMinSz=pLen[0];for(i=0;i<iChans;i++)if(pLen[i]<iMinSz)iMinSz=pLen[i];while(1){if(fread(pbuf,sizeof(short),iChans,fp)!=iChans)break;if(j<iMinSz)for(i=0;i<iChans;i++)pLV[i][j]=pbuf[i];j++;}if(j>iMinSz)printf("readbdatWARNA:couldonlyread%dsamples,filehas%dsamples\n",iMinSz,j);retval=j;CLEANBD:if(pList)FreeListVec(&pList);if(fp)fclose(fp);if(pbuf)free(pbuf);returnretval;}ENDVERBATIMFUNCTIONGetProbeNum(){VERBATIMchar*fname,buf[10];inti,j,sz,ploc;fname=gargstr(1);sz=strlen(fname);for(i=sz-1;i>=0;i--)if(fname[i]=='P')break;if(i-1<=0||fname[i-1]!='.')return-1;ploc=i;buf[0]=j=0;for(i=ploc+1;i<sz&&fname[i]>='0'&&fname[i]<='9'&&j<10;i++)buf[j++]=fname[i];if(i>=sz||fname[i]!='C')return-1;if(j<10)buf[j]=0;elsebuf[9]=0;returnatoi(buf);ENDVERBATIM}FUNCTIONGetClustNum(){VERBATIMchar*fname,buf[10];inti,j,sz,cloc;fname=gargstr(1);sz=strlen(fname);for(i=sz-2;i>=0;i--)if(fname[i]=='C')break;cloc=i;buf[0]=j=0;if(i+1>=sz)return-1;for(i=cloc+1;i<sz&&fname[i]>='0'&&fname[i]<='9'&&j<10;i++)buf[j++]=fname[i];if(j<10)buf[j]=0;elsebuf[9]=0;returnatoi(buf);ENDVERBATIM}PROCEDUREinstall(){if(INSTALLED==1){printf("$Id}else{INSTALLED=1VERBATIMinstall_vector_method("simts_PLACE",simts);install_vector_method("rd_PLACE",rd);install_vector_method("rdtts_PLACE",rdtts);install_vector_method("kendall",kendal2);install_vector_method("kend2",kend2);install_vector_method("kendall_PLACE",kendall);install_vector_method("mkgaussfield_PLACE",mkgaussfield);install_vector_method("dumpratemap_PLACE",dumpratemap);install_vector_method("glob",glob);install_vector_method("cumul",cumul);install_vector_method("readbpfunits",readbpfunits);install_vector_method("rdbpfu",rdbpfu);install_vector_method("readbpfeeg",readbpfeeg);install_vector_method("readbdat",readbdat);ENDVERBATIM}}