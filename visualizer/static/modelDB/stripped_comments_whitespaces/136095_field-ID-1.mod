VERBATIM#include"misc.h"#defineNSW5staticIvocVect*ww[NSW];staticdouble*wwo[NSW];staticintixp1;ENDVERBATIMNEURON{POINT_PROCESSFIELDPOINTERp1RANGEfldID}PARAMETER{}ASSIGNED{nswwwszp1fldID}CONSTRUCTOR{VERBATIM{fldID=ifarg(2)?(int)*getarg(2):1;if(fldID>=NSW){printf("FIELDCONSTRUCTORWARN:canonlystore%dwwvecs\n",NSW);hxe();}}ENDVERBATIM}INITIAL{VERBATIMixp1=0;ENDVERBATIM}PROCEDUREinitwrec(){VERBATIM{inti,k,num,cap;Object*ob;ob=*hoc_objgetarg(1);num=ivoc_list_count(ob);if(num>NSW){printf("FIELDinitwrec()WARN:canonlystore%dwwvecs\n",NSW);hxe();}nsw=(double)num;for(k=0;k<num;k++){cap=list_vector_px2(ob,k,&wwo[k],&ww[k]);if(k==0)wwsz=cap;elseif(wwsz!=cap){printf("FIELDinitwrecERRw-vecssizeerr:%d,%d,%d",k,wwsz,cap);hxe();}}}ENDVERBATIM}BREAKPOINT{VERBATIMintk;if(t>wwo[0][ixp1]){ixp1++;wwo[0][ixp1]=t;}if(ixp1>=wwsz){if(wwsz==0)wwsz=1e4;elsewwsz*=2;for(k=0;k<(int)nsw;k++)wwo[k]=vector_newsize(ww[k],wwsz);}wwo[(int)fldID][ixp1]+=(v-p1);ENDVERBATIM}PROCEDUREglobal_fini(){VERBATIMintk;for(k=0;k<(int)nsw;k++)vector_resize(ww[k],ixp1);ENDVERBATIM}