NEURON{SUFFIXmyfftGLOBALINSTALLEDGLOBALverbose}PARAMETER{INSTALLED=0verbose=0}VERBATIM#include<math.h>#include<stdlib.h>voidwsfirLP(doubleh[],intN,intWINDOW,doublefc,intVsz);voidwsfirHP(doubleh[],intN,intWINDOW,doublefc,intVsz);voidwsfirBS(doubleh[],intN,intWINDOW,doublefc1,doublefc2,intVsz);voidwsfirBP(doubleh[],intN,intWINDOW,doublefc1,doublefc2,intVsz);voidgenSinc(doublesinc[],intN,doublefc,intVsz);voidwBlackman(doublew[],intN,intVsz);voidwHanning(doublew[],intN,intVsz);voidwHamming(doublew[],intN,intVsz);#defineW_BLACKMAN1#defineW_HANNING2#defineW_HAMMING3voidwsfirLP(doubleh[],intN,intWINDOW,doublefc,intVsz){inti;double*w=(double*)calloc(N,sizeof(double));double*sinc=(double*)calloc(N,sizeof(double));genSinc(sinc,N,fc,N);switch(WINDOW){caseW_BLACKMAN:wBlackman(w,N,N);break;caseW_HANNING:wHanning(w,N,N);break;caseW_HAMMING:wHamming(w,N,N);break;default:break;}for(i=0;i<N;i++){h[i]=sinc[i]*w[i];}for(;i<Vsz;i++){h[i]=0.;}free(w);free(sinc);return;}voidlpwin(void*vv){double*x,fc;intfsz,win,vsz;vsz=vector_instance_px(vv,&x);fc=*getarg(1);fsz=ifarg(2)?(int)*getarg(2):vsz;win=ifarg(3)?(int)*getarg(3):W_BLACKMAN;wsfirLP(x,fsz,win,fc,vsz);}voidwsfirHP(doubleh[],intN,intWINDOW,doublefc,intVsz){inti;wsfirLP(h,N,WINDOW,fc,Vsz);for(i=0;i<N;i++){h[i]*=-1.0;}h[(N-1)/2]+=1.0;return;}voidhpwin(void*vv){double*x,fc;intfsz,win,vsz;vsz=vector_instance_px(vv,&x);fc=*getarg(1);fsz=ifarg(2)?(int)*getarg(2):vsz;win=ifarg(3)?(int)*getarg(3):W_BLACKMAN;wsfirHP(x,fsz,win,fc,vsz);}voidwsfirBS(doubleh[],intN,intWINDOW,doublefc1,doublefc2,intVsz){inti;double*h1=(double*)calloc(N,sizeof(double));double*h2=(double*)calloc(N,sizeof(double));wsfirLP(h1,N,WINDOW,fc1,N);wsfirHP(h2,N,WINDOW,fc2,N);for(i=0;i<N;i++){h[i]=h1[i]+h2[i];}for(;i<Vsz;i++){h[i]=0.;}free(h1);free(h2);return;}voidbswin(void*vv){double*x,fc1,fc2;intfsz,win,vsz;vsz=vector_instance_px(vv,&x);fc1=*getarg(1);fc2=*getarg(2);fsz=ifarg(3)?(int)*getarg(3):vsz;win=ifarg(4)?(int)*getarg(4):W_BLACKMAN;wsfirBS(x,fsz,win,fc1,fc2,vsz);}voidwsfirBP(doubleh[],intN,intWINDOW,doublefc1,doublefc2,intVsz){inti;wsfirBS(h,N,WINDOW,fc1,fc2,Vsz);for(i=0;i<N;i++){h[i]*=-1.0;}h[(N-1)/2]+=1.0;return;}voidbpwin(void*vv){double*x,fc1,fc2;intfsz,win,vsz;vsz=vector_instance_px(vv,&x);fc1=*getarg(1);fc2=*getarg(2);fsz=ifarg(3)?(int)*getarg(3):vsz;win=ifarg(4)?(int)*getarg(4):W_BLACKMAN;wsfirBP(x,fsz,win,fc1,fc2,vsz);}voidgenSinc(doublesinc[],intN,doublefc,intVsz){inti;doubleM=N-1;doublen;doublePI=3.14159265358979323846;for(i=0;i<N;i++){if(i==M/2.0){sinc[i]=2.0*fc;}else{n=(double)i-M/2.0;sinc[i]=sin(2.0*PI*fc*n)/(PI*n);}}for(;i<Vsz;i++){sinc[i]=0.;}return;}voidsincwin(void*vv){double*x,fc;intfsz,vsz;vsz=vector_instance_px(vv,&x);fc=*getarg(1);fsz=ifarg(2)?(int)*getarg(2):vsz;genSinc(x,fsz,fc,vsz);}voidwBlackman(doublew[],intN,intVsz){inti;doubleM=N-1;doublePI=3.14159265358979323846;for(i=0;i<N;i++){w[i]=0.42-(0.5*cos(2.0*PI*(double)i/M))+(0.08*cos(4.0*PI*(double)i/M));}for(;i<Vsz;i++){w[i]=0.;}return;}voidblackmanwin(void*vv){double*x;intfsz,vsz;vsz=vector_instance_px(vv,&x);fsz=ifarg(1)?(int)*getarg(1):vsz;wBlackman(x,fsz,vsz);}voidwHanning(doublew[],intN,intVsz){inti;doubleM=N-1;doublePI=3.14159265358979323846;for(i=0;i<N;i++){w[i]=0.5*(1.0-cos(2.0*PI*(double)i/M));}for(;i<Vsz;i++){w[i]=0.;}return;}voidhanningwin(void*vv){double*x;intfsz,vsz;vsz=vector_instance_px(vv,&x);fsz=ifarg(1)?(int)*getarg(1):vsz;wHanning(x,fsz,vsz);}voidwHamming(doublew[],intN,intVSz){inti;doubleM=N-1;doublePI=3.14159265358979323846;for(i=0;i<N;i++){w[i]=0.54-(0.46*cos(2.0*PI*(double)i/M));}for(;i<VSz;i++){w[i]=0.;}return;}voidhammingwin(void*vv){double*x;intfsz,vsz;vsz=vector_instance_px(vv,&x);fsz=ifarg(1)?(int)*getarg(1):vsz;wHamming(x,fsz,vsz);}double*wrap(double*x,intn,intflen){double*y=(double*)calloc(n,sizeof(double));inti,j=0;for(i=flen/2+1;i<flen;i++)y[j++]=x[i];j=n-flen/2-1;for(i=0;i<=flen/2;i++)y[j++]=x[i];returny;}voidwraparound(void*vv){double*x,*y;intvsz,fsz,i;vsz=vector_instance_px(vv,&x);fsz=(int)*getarg(1);if(fsz>vsz){printf("wraparoundERRA:invalidfilterlen%d>vectorlen%d!\n",fsz,vsz);return;}y=wrap(x,vsz,fsz);for(i=0;i<vsz;i++)x[i]=y[i];free(y);}#include<math.h>#include<stdio.h>typedefdoublereal;externvoidfour1(doublemdata[],unsignedlongnn,intisign);externvoidtwofft(doubledata1[],doubledata2[],doublefft1[],doublefft2[],unsignedlongn);externvoidrealft(doublemdata[],unsignedlongn,intisign);externvoidconvlv(doublemdata[],unsignedlongn,doublerespns[],unsignedlongm,intisign,doubleans[]);externvoidcorrel(doubledata1[],doubledata2[],unsignedlongn,doubleans[]);externvoidspctrm(doublemdata[],doublep[],intm,intk);voidnrerror(charerror_text[]){hoc_execerror("NumericalRecipesrun-timeerror...\n",error_text);}voidtwofft(doubledata1[],doubledata2[],doublefft1[],doublefft2[],unsignedlongn){voidnrfour1(doublemdata[],unsignedlongnn,intisign);unsignedlongnn3,nn2,jj,j;doublerep,rem,aip,aim;nn3=1+(nn2=2+n+n);for(j=1,jj=2;j<=n;j++,jj+=2){fft1[jj-1]=data1[j];fft1[jj]=data2[j];}nrfour1(fft1,n,1);fft2[1]=fft1[2];fft1[2]=fft2[2]=0.0;for(j=3;j<=n+1;j+=2){rep=0.5*(fft1[j]+fft1[nn2-j]);rem=0.5*(fft1[j]-fft1[nn2-j]);aip=0.5*(fft1[j+1]+fft1[nn3-j]);aim=0.5*(fft1[j+1]-fft1[nn3-j]);fft1[j]=rep;fft1[j+1]=aim;fft1[nn2-j]=rep;fft1[nn3-j]=-aim;fft2[j]=aip;fft2[j+1]=-rem;fft2[nn2-j]=aip;fft2[nn3-j]=rem;}}voidrealft(doublemdata[],unsignedlongn,intisign){voidnrfour1(doublemdata[],unsignedlongnn,intisign);unsignedlongi,i1,i2,i3,i4,np3;doublec1=0.5,c2,h1r,h1i,h2r,h2i;doublewr,wi,wpr,wpi,wtemp,theta;theta=3.141592653589793/(double)(n>>1);if(isign==1){c2=-0.5;nrfour1(mdata,n>>1,1);}else{c2=0.5;theta=-theta;}wtemp=sin(0.5*theta);wpr=-2.0*wtemp*wtemp;wpi=sin(theta);wr=1.0+wpr;wi=wpi;np3=n+3;for(i=2;i<=(n>>2);i++){i4=1+(i3=np3-(i2=1+(i1=i+i-1)));h1r=c1*(mdata[i1]+mdata[i3]);h1i=c1*(mdata[i2]-mdata[i4]);h2r=-c2*(mdata[i2]+mdata[i4]);h2i=c2*(mdata[i1]-mdata[i3]);mdata[i1]=h1r+wr*h2r-wi*h2i;mdata[i2]=h1i+wr*h2i+wi*h2r;mdata[i3]=h1r-wr*h2r+wi*h2i;mdata[i4]=-h1i+wr*h2i+wi*h2r;wr=(wtemp=wr)*wpr-wi*wpi+wr;wi=wi*wpr+wtemp*wpi+wi;}if(isign==1){mdata[1]=(h1r=mdata[1])+mdata[2];mdata[2]=h1r-mdata[2];}else{mdata[1]=c1*((h1r=mdata[1])+mdata[2]);mdata[2]=c1*(h1r-mdata[2]);nrfour1(mdata,n>>1,-1);}}staticdoublenrsqrarg;#defineSQR(a)((nrsqrarg=(a))==0.0?0.0:nrsqrarg*nrsqrarg)voidconvlv(doublemdata[],unsignedlongn,doublerespns[],unsignedlongm,intisign,doubleans[]){voidrealft(doublemdata[],unsignedlongn,intisign);voidtwofft(doubledata1[],doubledata2[],doublefft1[],doublefft2[],unsignedlongn);unsignedlongi,no2;doubledum,mag2,*fft;fft=nrvector(1,n<<1);for(i=1;i<=(m-1)/2;i++)respns[n+1-i]=respns[m+1-i];for(i=(m+3)/2;i<=n-(m-1)/2;i++)respns[i]=0.0;twofft(mdata,respns,fft,ans,n);no2=n>>1;for(i=2;i<=n+2;i+=2){if(isign==1){ans[i-1]=(fft[i-1]*(dum=ans[i-1])-fft[i]*ans[i])/no2;ans[i]=(fft[i]*dum+fft[i-1]*ans[i])/no2;}elseif(isign==-1){if((mag2=SQR(ans[i-1])+SQR(ans[i]))==0.0)nrerror("Deconvolvingatresponsezeroinconvlv");ans[i-1]=(fft[i-1]*(dum=ans[i-1])+fft[i]*ans[i])/mag2/no2;ans[i]=(fft[i]*dum-fft[i-1]*ans[i])/mag2/no2;}elsenrerror("Nomeaningforisigninconvlv");}ans[2]=ans[n+1];realft(ans,n,-1);nrfree_vector(fft,1,n<<1);}doublerconvlv(double*mdata,intn,double*respns,intm,double*ans){intisign=1;convlv(&mdata[0]-1,n,&respns[0]-1,m,isign,&ans[0]-1);return1;}#definePI3.1415926535897932#definePI80.392699081698724#defineRT21.4142135623731#defineIRT20.707106781186548#definesignum(i)(i<0?-1:i==0?0:1)intFAST(real*,int);voidFR2TR(int,real*,real*);voidFR4TR(int,int,real*,real*,real*,real*);voidFORD1(int,real*);voidFORD2(int,real*);intfastlog2(int);doubletwo_to_the(doubleN){return(int)(pow(2.0,(N))+0.5);}intfft_real(real*orig,real*fftd,intnpoint){inti;for(i=0;i<npoint;i++)fftd[i]=orig[i];if(FAST(fftd,npoint)==0){fprintf(stderr,"Errorcalculatingfft.\n");return0;}return1;}doublefftband(void*v){double*x;intn=vector_instance_px(v,&x);doubledret=0.;double*pout=0;intoutlen=vector_arg_px(1,&pout);intlowhz=(int)*getarg(2);inthihz=(int)*getarg(3);intlog2length=ceil(log((double)(n))/log(2.0));intfftlen=two_to_the((double)log2length);double*fftd=(double*)calloc(fftlen,sizeof(double));if(outlen<fftlen){printf("fftbandERRA:outlen%d<%d",outlen,fftlen);gotoFBCLEANUP;}if(!fft_real(x,fftd,n)){printf("fftbandERRB:couldn'tperformfft\n");gotoFBCLEANUP;}inthz=0,di=0;intnpoints=(int)(pow(2.0,(real)log2length)+0.5);intnpoints2=npoints/2;fftd[0]=fftd[1]=0.;inti,j,k;for(i=1;k<npoints2;i++){j=2*i;k=2*i+1;if(i<lowhz){di=lowhz-i;if(di==1){fftd[j]/=2.;fftd[k]/=2.;}elseif(di==2){fftd[j]/=4.;fftd[k]/=4.;}else{fftd[j]=0.;fftd[k]=0.;}}elseif(i>hihz){di=i-hihz;if(di==1){fftd[j]/=2.;fftd[k]/=2.;}elseif(di==2){fftd[j]/=4.;fftd[k]/=4.;}else{fftd[j]=0.;fftd[k]=0.;}}}if(!fft_real(fftd,pout,n)){printf("fftbadnERRC:couldn'tperformfft\n");gotoFBCLEANUP;}dret=1.;FBCLEANUP:if(fftd)free(fftd);returndret;}intfft_pow(real*orig,real*power,longwinlength,longlog2length){inti,j,k;real*temp=NULL;intnpoints,npoints2;npoints=(int)(pow(2.0,(real)log2length)+0.5);npoints2=npoints/2;temp=(real*)malloc(npoints*sizeof(real));if(temp==(real*)NULL){fprintf(stderr,"Errormallocingmemoryinfft_pow()\n");return0;}for(i=0;i<winlength;i++)temp[i]=(real)orig[i];for(i=winlength;i<npoints;i++)temp[i]=0.0;if(FAST(temp,npoints)==0){fprintf(stderr,"Errorcalculatingfft.\n");free(temp);return0;}power[0]=temp[0]*temp[0];power[npoints2]=temp[1]*temp[1];for(i=1;i<npoints2;i++){j=2*i;k=2*i+1;power[i]=temp[j]*temp[j]+temp[k]*temp[k];}free(temp);return1;}intfastlog2(intn);doubletlog2(doubled){staticdoublel2=0.693147181;returnlog(d)/l2;}doubledfftpow(double*x,intn,double*ppow,intpowlen,int*fftlen){intlog2length=ceil(log((double)(n))/log(2.0));*fftlen=two_to_the((double)log2length);if(powlen<*fftlen/2+1){printf("dfftpowERRA:powlen=%d<fftlength/2+1=%d\n",powlen,*fftlen/2+1);return0.0;}doubledret=(double)fft_pow(x,ppow,n,log2length);returndret;}doublefftpow(void*v){double*x;intn=vector_instance_px(v,&x);double*ppow;intpowlen=vector_arg_px(1,&ppow);intfftlen=0;if(dfftpow(x,n,ppow,powlen,&fftlen)){vector_resize(vector_arg(1),fftlen/2+1);return1.0;}return0.0;}intFAST(real*b,intn){realfn;inti,in,nn,n2pow,n4pow,nthpo;n2pow=fastlog2(n);if(n2pow<=0)return0;nthpo=n;fn=nthpo;n4pow=n2pow/2;if(n2pow%2){nn=2;in=n/nn;FR2TR(in,b,b+in);}elsenn=1;for(i=1;i<=n4pow;i++){nn*=4;in=n/nn;FR4TR(in,nn,b,b+in,b+2*in,b+3*in);}FORD1(n2pow,b);FORD2(n2pow,b);for(i=3;i<n;i+=2)b[i]=-b[i];return1;}voidFR2TR(intin,real*b0,real*b1){intk;realmt;for(k=0;k<in;k++){mt=b0[k]+b1[k];b1[k]=b0[k]-b1[k];b0[k]=mt;}}voidFR4TR(intin,intnn,real*b0,real*b1,real*b2,real*b3){realarg,piovn,th2;real*b4=b0,*b5=b1,*b6=b2,*b7=b3;realt0,t1,t2,t3,t4,t5,t6,t7;realr1,r5,pr,pi;realc1,c2,c3,s1,s2,s3;intj,k,jj,kk,jthet,jlast,ji,jl,jr,int4;intL[16],L1,L2,L3,L4,L5,L6,L7,L8,L9,L10,L11,L12,L13,L14,L15;intj0,j1,j2,j3,j4,j5,j6,j7,j8,j9,j10,j11,j12,j13,j14;intk0,kl;L[1]=nn/4;for(k=2;k<16;k++){switch(signum(L[k-1]-2)){case-1:L[k-1]=2;case0:L[k]=2;break;case1:L[k]=L[k-1]/2;}}L15=L[1];L14=L[2];L13=L[3];L12=L[4];L11=L[5];L10=L[6];L9=L[7];L8=L[8];L7=L[9];L6=L[10];L5=L[11];L4=L[12];L3=L[13];L2=L[14];L1=L[15];piovn=PI/nn;ji=3;jl=2;jr=2;for(j1=2;j1<=L1;j1+=2)for(j2=j1;j2<=L2;j2+=L1)for(j3=j2;j3<=L3;j3+=L2)for(j4=j3;j4<=L4;j4+=L3)for(j5=j4;j5<=L5;j5+=L4)for(j6=j5;j6<=L6;j6+=L5)for(j7=j6;j7<=L7;j7+=L6)for(j8=j7;j8<=L8;j8+=L7)for(j9=j8;j9<=L9;j9+=L8)for(j10=j9;j10<=L10;j10+=L9)for(j11=j10;j11<=L11;j11+=L10)for(j12=j11;j12<=L12;j12+=L11)for(j13=j12;j13<=L13;j13+=L12)for(j14=j13;j14<=L14;j14+=L13)for(jthet=j14;jthet<=L15;jthet+=L14){th2=jthet-2;if(th2<=0.0){for(k=0;k<in;k++){t0=b0[k]+b2[k];t1=b1[k]+b3[k];b2[k]=b0[k]-b2[k];b3[k]=b1[k]-b3[k];b0[k]=t0+t1;b1[k]=t0-t1;}if(nn-4>0){k0=in*4+1;kl=k0+in-1;for(k=k0;k<=kl;k++){kk=k-1;pr=IRT2*(b1[kk]-b3[kk]);pi=IRT2*(b1[kk]+b3[kk]);b3[kk]=b2[kk]+pi;b1[kk]=pi-b2[kk];b2[kk]=b0[kk]-pr;b0[kk]=b0[kk]+pr;}}}else{arg=th2*piovn;c1=cos(arg);s1=sin(arg);c2=c1*c1-s1*s1;s2=c1*s1+c1*s1;c3=c1*c2-s1*s2;s3=c2*s1+s2*c1;int4=in*4;j0=jr*int4+1;k0=ji*int4+1;jlast=j0+in-1;for(j=j0;j<=jlast;j++){k=k0+j-j0;kk=k-1;jj=j-1;r1=b1[jj]*c1-b5[kk]*s1;r5=b1[jj]*s1+b5[kk]*c1;t2=b2[jj]*c2-b6[kk]*s2;t6=b2[jj]*s2+b6[kk]*c2;t3=b3[jj]*c3-b7[kk]*s3;t7=b3[jj]*s3+b7[kk]*c3;t0=b0[jj]+t2;t4=b4[kk]+t6;t2=b0[jj]-t2;t6=b4[kk]-t6;t1=r1+t3;t5=r5+t7;t3=r1-t3;t7=r5-t7;b0[jj]=t0+t1;b7[kk]=t4+t5;b6[kk]=t0-t1;b1[jj]=t5-t4;b2[jj]=t2-t7;b5[kk]=t6+t3;b4[kk]=t2+t7;b3[jj]=t3-t6;}jr+=2;ji-=2;if(ji-jl<=0){ji=2*jr-1;jl=jr;}}}}voidFORD1(intm,real*b){intj,k=4,kl=2,n=0x1<<m;realmt;for(j=4;j<=n;j+=2){if(k-j>0){mt=b[j-1];b[j-1]=b[k-1];b[k-1]=mt;}k-=2;if(k-kl<=0){k=2*j;kl=j;}}}voidFORD2(intm,real*b){realmt;intn=0x1<<m,k,ij,ji,ij1,ji1;intl[16],l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,l11,l12,l13,l14,l15;intj1,j2,j3,j4,j5,j6,j7,j8,j9,j10,j11,j12,j13,j14;l[1]=n;for(k=2;k<=m;k++)l[k]=l[k-1]/2;for(k=m;k<=14;k++)l[k+1]=2;l15=l[1];l14=l[2];l13=l[3];l12=l[4];l11=l[5];l10=l[6];l9=l[7];l8=l[8];l7=l[9];l6=l[10];l5=l[11];l4=l[12];l3=l[13];l2=l[14];l1=l[15];ij=2;for(j1=2;j1<=l1;j1+=2)for(j2=j1;j2<=l2;j2+=l1)for(j3=j2;j3<=l3;j3+=l2)for(j4=j3;j4<=l4;j4+=l3)for(j5=j4;j5<=l5;j5+=l4)for(j6=j5;j6<=l6;j6+=l5)for(j7=j6;j7<=l7;j7+=l6)for(j8=j7;j8<=l8;j8+=l7)for(j9=j8;j9<=l9;j9+=l8)for(j10=j9;j10<=l10;j10+=l9)for(j11=j10;j11<=l11;j11+=l10)for(j12=j11;j12<=l12;j12+=l11)for(j13=j12;j13<=l13;j13+=l12)for(j14=j13;j14<=l14;j14+=l13)for(ji=j14;ji<=l15;ji+=l14){ij1=ij-1;ji1=ji-1;if(ij-ji<0){mt=b[ij1-1];b[ij1-1]=b[ji1-1];b[ji1-1]=mt;mt=b[ij1];b[ij1]=b[ji1];b[ji1]=mt;}ij+=2;}}intfastlog2(intn){intnum_bits,power=0;if((n<2)||(n%2!=0))return(0);num_bits=sizeof(int)*8;while(power<=num_bits){n>>=1;power+=1;if(n&0x01){if(n>1)return(0);elsereturn(power);}}return(0);}ENDVERBATIMFUNCTIONhfastlog2(){VERBATIMreturnfastlog2((int)*getarg(1));ENDVERBATIM}FUNCTIONlog2(){VERBATIMstaticdoublel2=0.693147181;returnlog(*getarg(1))/l2;ENDVERBATIM}PROCEDUREinstall(){if(INSTALLED==1){printf("alreadyinstalledmyfft.mod")}else{INSTALLED=1VERBATIMinstall_vector_method("fftpow",fftpow);install_vector_method("fftband",fftband);install_vector_method("lpwin",lpwin);install_vector_method("hpwin",hpwin);install_vector_method("bswin",bswin);install_vector_method("bpwin",bpwin);install_vector_method("sincwin",sincwin);install_vector_method("blackmanwin",blackmanwin);install_vector_method("hanningwin",hanningwin);install_vector_method("hammingwin",hammingwin);install_vector_method("wraparound",wraparound);ENDVERBATIM}}